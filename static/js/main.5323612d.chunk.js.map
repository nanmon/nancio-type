{"version":3,"sources":["pages/yoshi/audios/1.wav","pages/yoshi/audios/2.wav","pages/yoshi/audios/3.wav","pages/yoshi/audios/4.wav","pages/yoshi/audios/5.wav","pages/yoshi/audios/6.wav","pages/yoshi/audios/7.wav","util/text.ts","util/handlers.ts","reducers/merge.ts","reducers/index.ts","reducers/init.ts","reducers/typing.ts","reducers/screen.ts","components/Caret.tsx","components/Char.tsx","components/Word.tsx","components/Line.tsx","components/TypingTest.tsx","components/Typer.tsx","components/Stats.tsx","components/Screens.tsx","pages/quotes/Quotes.tsx","pages/yoshi/Yoshi.tsx","pages/banana/util/formatters.ts","pages/banana/reducer/init.ts","pages/banana/util/logic.ts","pages/banana/reducer/buyUpgrade.ts","pages/banana/reducer/index.ts","pages/banana/reducer/tick.ts","pages/banana/reducer/typed.ts","pages/banana/reducer/buyBuilding.ts","pages/banana/components/Building.tsx","pages/banana/components/Tooltip.tsx","pages/banana/components/Upgrade.tsx","pages/banana/Banana.tsx","pages/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["IGNORED_CHARACTERS","IGNORED_MODIFIERS","getWords","text","split","filter","w","getChars","getWidth","fontFamily","fontSize","context","document","createElement","getContext","font","measureText","width","getLines","typed","typedWords","words","zip","currentLength","currentLine","lines","forEach","word","wlength","length","push","trim","lastWpm","state","milis","timeline","endTime","last","timestamp","slice","timeSlice","st","content","rawWpm","isDoneTyping","allWords","endsWith","pop","netWpm","errors","index","typedWord","typedChar","unfixedErrors","typedMilis","i","includes","char","typedCount","mistypedLast","wordsTyped","lastWord","actualWord","lastChar","from","to","overtime","start","findIndex","end","merge","ducers","init","action","reset","screen","temp","prevTime","delta","count","config","lineHeight","colors","left","correct","wrong","extra","caret","typing","newState","substr","setTyped","setDone","time","addToTimeline","Object","entries","some","key","val","reducer","r","type","Caret","position","focused","useTyper","React","useState","className","setClassName","useEffect","timeoutId","setTimeout","clearTimeout","x","y","charWidth","clampedY","style","top","transform","color","visibility","Char","memo","code","useMemo","str","join","Word","current","_chars","redline","c","space","marginRight","borderBottomColor","map","Line","undefined","prev","next","prevTyped","nextTyped","TypingTest","onKeyPress","dispatch","useContext","DispatchContext","inputRef","useRef","inputHasFocus","setInputFocus","capslock","setCapslock","focus","wcount","lineIndex","line","lwords","charIndex","getCaretPosition","capslockDetector","e","getModifierState","drawingLines","threeLinesHeight","ref","onKeyDown","mod","Date","now","preventDefault","onKeyUp","height","padding","border","onFocus","onBlur","onClick","Stats","counts","incorrect","missing","extras","wtext","wtyped","chtext","chtyped","charCounts","startTime","duration","chartData","data","Array","Math","round","_","second","wpm","wpmPoint","raw","slicePoint","errorPoint","typedPoint","acc","total","reduce","sum","d","ComposedChart","yAxisId","dataKey","stroke","fill","Scatter","CartesianGrid","strokeDasharray","XAxis","tickCount","domain","allowDecimals","YAxis","orientation","Tooltip","errs","item","Number","Screens","StateContext","createContext","Typer","onType","restartOnContentChange","useReducer","Provider","value","Quotes","quotes","setQuotes","setIndex","fetch","process","then","json","rand","useCallback","t","floor","random","audios","require","default","Yoshi","setContent","track","setTrack","setTimeoutId","refs","useLayoutEffect","audioProm","Promise","all","el","load","resolve","oncanplay","a","src","muted","preload","loop","net","clamp","play","id","pause","currentTime","threeDecimals","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","threeIfNecessary","wpmf","maximumSignificantDigits","minimumSignificantDigits","integer","totalBananas","num","sci","base","exp","format","bps","price","log10","bananas","bpsMultiplier","typer","bpt","multiplier","gain","cpsPercent","buildings","building","upgrades","doubleEfficiencyUpgrade","buildingGainUpgrade","typingUpgrade","bpsMultiplierUpgrade","tech","lastTimestamp","name","baseBps","owned","unlocked","unlocksAt","upgrade","lock","effects","bought","buildingId","needed","gainType","bonus","fullBps","b","buildingBpsPerOwned","fullBuildingBps","fullBpt","noGain","buyUpgrade","upgradeId","effect","effectFn","efficiency","tick","dt","made","unlockBuildings","unlockUpgrades","typingUnlock","buyBuilding","up","buildingUnlock","useBanana","initialState","KEYBINDS","Building","ctrlHeld","onBuy","keybind","disabled","formatters","props","children","hasBuilding","describer","effectDescribers","Upgrade","tooltip","setTooltip","hover","clientX","clientY","onMouseMove","onMouseEnter","onMouseLeave","JSON","parse","localStorage","getItem","Banana","randomWords","exactly","wps","setWps","stateRef","savedAt","setSavedAt","setCtrlHeld","availableBuildings","u","availableUpgrades","sort","shownBps","shownBpt","renderUpgradesRow","lengths","stringify","setItem","intervalId","setInterval","clearInterval","lastTime","console","log","splice","kbClasses","direction","keyIndex","indexOf","Router","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5323612d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.d7420ab5.wav\";","export default __webpack_public_path__ + \"static/media/2.9ee81949.wav\";","export default __webpack_public_path__ + \"static/media/3.c5b467d3.wav\";","export default __webpack_public_path__ + \"static/media/4.0f83ee86.wav\";","export default __webpack_public_path__ + \"static/media/5.1c9b447b.wav\";","export default __webpack_public_path__ + \"static/media/6.d6666621.wav\";","export default __webpack_public_path__ + \"static/media/7.a1d42fec.wav\";","import zip from 'lodash/zip';\n\nexport const IGNORED_CHARACTERS = ['', 'Backspace'];\nexport const IGNORED_MODIFIERS = ['Alt', 'AltGraph', 'Control', 'Fn', 'Meta', 'OS']\n\nexport const getWords = (text = '') => {\n  return text.split(' ').filter(w => w);\n}\n\nexport const getChars = (text = '') => {\n  return text.split('');\n}\n\nexport const getExtra = (text: string, typed = '') => {\n  if (typed.length > text.length)\n    return typed.substr(text.length);\n  return '';\n}\n\nexport const withExtra = (text: string, typed: string) => {\n  const wtext = getWords(text);\n  const wtyped = getWords(typed);\n  return zip(wtext, wtyped).map(([text, typed]) => {\n    return text + getExtra(text!, typed);\n  }).join(' ');\n}\n\nexport const getWidth = (\n  text: string, \n  {fontFamily, fontSize}: {fontFamily: string, fontSize: number}\n) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context!.font = `${fontSize}px ${fontFamily}`;\n  return context!.measureText(text).width;\n}\n\nexport const getLines = (\n  text: string, \n  typed: string, \n  { width }: { width: number }\n) => {\n  const typedWords = getWords(typed)\n  const words = zip(\n    getWords(text),\n    typedWords,\n  )\n  let currentLength = 0;\n  let currentLine: [string, string] = ['', '']\n  const lines: [string, string][] = [];\n  words.forEach(([word, typed]) => {\n    if (!word) return;\n    let wlength = word.length;\n    if (typed && typed.length > word.length) wlength = typed.length;\n    if (currentLength + 1 + wlength > width) {\n      currentLength = wlength;\n      lines.push([\n        currentLine[0].trim(),\n        currentLine[1].trim()\n      ]);\n      currentLine = [word, typed || '']\n    } else {\n      currentLength += 1 + wlength;\n      currentLine[0] += ' ' + word;\n      if (typed) currentLine[1] += ' ' + typed;\n    }\n  });\n  if (currentLine.length > 0) lines.push(currentLine);\n  return lines;\n}\n\nexport const getCaretPosition = (lines: string[], typed: string): [number, number] => {\n  const words = getWords(typed);\n  let wcount = 0;\n  const lineIndex = lines.findIndex(line => {\n    const lwords = getWords(line);\n    if (wcount + lwords.length >= words.length) return true;\n    wcount += lwords.length;\n    return false;\n  });\n  const lastWords = words.slice(wcount);\n  let charIndex = lastWords.join(' ').length;\n  if (typed.endsWith(' ')) charIndex++;\n  return [charIndex, lineIndex];\n}","import zip from 'lodash/zip';\nimport last from 'lodash/last'\nimport { getChars, getExtra, getWords, IGNORED_CHARACTERS } from \"./text\";\n\nexport function didType(state: Typer.State, str: string) {\n  const { typed, content } = state;\n  const startIndex = content.text.indexOf(str);\n  if (startIndex === -1)\n    throw Error('string not found in text');\n  const endIndex = startIndex + str.length;\n  const substr = content.text.substr(0, endIndex);\n  const subWords = getWords(substr);\n  const typedWords = getWords(typed);\n  return typedWords.length >= subWords.length;\n}\n\nexport function wordStats(state: Typer.State, wordIndex: number) {\n  const { typed, content } = state;\n  const stats = { left: 0, correct: 0, extra: 0, wrong: 0 }\n  const word = getWords(content.text)[wordIndex];\n  const typedWord = getWords(typed)[wordIndex];\n  if (!typedWord) {\n    stats.left = word.length;\n    return stats;\n  }\n  zip(\n    getChars(word),\n    getChars(typedWord),\n  ).forEach(([char, typedChar]) => {\n    if (!typedChar) stats.left++;\n    else if (char === typedChar) stats.correct++;\n    else stats.wrong++;\n  });\n  const extraStr = getExtra(word, typedWord);\n  getChars(extraStr).forEach(() => {\n    stats.extra++;\n  });\n  return stats;\n}\n\nexport function lastWpm(state: Typer.State, milis = 5000) {\n  if (state.timeline.length === 0) return 0;\n  const endTime = last(state.timeline)!.timestamp;\n  let slice = timeSlice(\n    state, \n    endTime - milis,\n    endTime + 1000,\n    false\n  );\n  if (slice.length === 0) return 0;\n  const typed = last(slice)!.typed;\n  const st = { typed, content: state.content, timeline: slice };\n  return rawWpm(st);\n}\n\nexport function isDoneTyping({ typed, content }: Typer.State) {\n  const typedWords = getWords(typed);\n  const allWords = getWords(content.text);\n  if (typedWords.length < allWords.length) return false;\n  if (typed.endsWith(' ')) return true;\n  const lastTyped = typedWords.pop();\n  const lastWord = allWords.pop();\n  return lastTyped === lastWord;\n}\n\nexport function netWpm(state: Pick<Typer.State, 'timeline' | 'content' | 'typed'>) {\n  return rawWpm(state) - unfixedErrors(state) / typedMilis(state) * 1000 * 60;\n}\n\nexport function rawWpm(state: Pick<Typer.State, 'timeline'>) {\n  return typedCount(state) / typedMilis(state) * 1000 * 60 / 5;\n}\n\nexport function typedCount(state: Pick<Typer.State, 'timeline'>) {\n  return state.timeline\n    .filter(i => !IGNORED_CHARACTERS.includes(i.char))\n    .length;\n}\n\nexport function typedMilis(state: Pick<Typer.State, 'timeline'>) {\n  if (state.timeline.length === 0) return 0;\n  return last(state.timeline)!.timestamp - state.timeline[0].timestamp;\n}\n\nexport function unfixedErrors(state: Pick<Typer.State, 'typed' | 'content'>) {\n  let errors = 0;\n  const typedWords = getWords(state.typed);\n  zip(\n    typedWords,\n    getWords(state.content.text),\n  ).forEach(([typedWord, word], index) => {\n    if (!word || !typedWord) return; // should not happen\n    if (index < typedWords.length -1 && word.length > typedWord!.length) {\n      errors++; // all missings as one error\n    }\n    zip(\n      getChars(typedWord),\n      getChars(word),\n    ).forEach(([typedChar, char]) => {\n      if (char === typedChar) return;\n      errors++; // extras and incorrects\n    });\n  });\n  return errors;\n}\n\nexport function groupTimeline(\n  state: Typer.State, \n  groupMilis: number = 1000\n): Typer.TimelineItem[][] {\n  let groups: Typer.TimelineItem[][] = [];\n  let [firstItem, ...rest] = state.timeline;\n  let prevTimestamp = firstItem.timestamp;\n  let accumTime = 0;\n  let currentGroup = [firstItem];\n  rest.forEach(item => {\n    accumTime += item.timestamp - prevTimestamp;\n    prevTimestamp = item.timestamp;\n    currentGroup.push(item);\n    while (accumTime >= groupMilis) {\n      accumTime -= groupMilis;\n      groups.push(currentGroup);\n      currentGroup = [];\n    }\n  });\n  if (currentGroup.length > 0) {\n    const groupTime = last(currentGroup)!.timestamp - currentGroup[0].timestamp;\n    if (groupTime < groupMilis / 2 && groups.length > 0) {\n      last(groups)!.push(...currentGroup);\n    } else {\n      groups.push(currentGroup);\n    }\n  }\n  return groups;\n}\n\nexport function mistypedLast(\n  state: Pick<Typer.State, 'typed' | 'content'>\n) {\n  const { typed, content } = state;\n  if (!typed) return false;\n  const char = last(typed)!;\n  if (IGNORED_CHARACTERS.includes(char)) return false;\n\n  const wordsTyped = getWords(typed);\n  const lastWord = last(wordsTyped)!;\n  const actualWord = getWords(content.text)[wordsTyped.length - 1];\n\n  // it'd be like that sometimes\n  if (!actualWord) return false;\n\n  if (typed.endsWith(' ')) {\n    // not extra, missing\n    const missing = actualWord.length - lastWord.length;\n    return missing > 0;\n  }\n\n  const lastChar = lastWord[lastWord.length - 1];\n  const actualChar = actualWord[lastWord.length - 1];\n  return actualChar !== lastChar;\n}\n\nexport function timeSlice(\n  state: Typer.State, \n  from: number, \n  to: number,\n  overtime: boolean = false\n) {\n  let start = state.timeline.findIndex(i => i.timestamp >= from);\n  let end = state.timeline.findIndex(i => i.timestamp >= to);\n  if (start === -1) start = 0;\n  if (end === -1) end = state.timeline.length - 1;\n  if (overtime) {\n    if (start > 0) start--;\n    if (end < state.timeline.length - 1) end++;\n  }\n  return state.timeline.slice(start, end);\n}","function merge(state: Typer.State, action: Typer.Actions.Merge): Typer.State {\n  let diff = Object.entries(action.state)\n    .some(([key, val]) => state[key] !== val);\n  if (!diff) return state;\n  return {\n    ...state,\n    ...action.state,\n  }\n}\n\nexport default merge;","import init from './init';\nimport typing from './typing';\nimport screen from './screen';\nimport merge from './merge';\n\nconst ducers = {\n  init,\n  typing,\n  screen,\n  merge,\n};\n\nexport default function reducer(\n  state: Typer.State | null, \n  action: Typer.Actions.Any) \n{\n  const r = ducers[action.type] as Reducer;\n  if (!r) return state;\n  return r(state, action);\n}\n\ntype Reducer = (state: Typer.State | null, action: Typer.Actions.Any) => Typer.State;","export default function init(\n  state: Typer.State | null, \n  action: Typer.Actions.Init\n): Typer.State {\n  if (!action.reset) {\n    return {\n      ...state!,\n      content: action.content,\n      timeline: []\n    }\n  }\n  return {\n    content: action.content,\n    typed: '',\n    screen: 'typing',\n    temp: {\n      prevTime: 0,\n      delta: 0,\n      errors: 0,\n      count: 0\n    },\n    timeline: [],\n    config: {\n      fontFamily: 'monospace',\n      fontSize: 24,\n      lineHeight: 30,\n      width: 60, \n      colors: {\n        left: 'gray',\n        correct: 'white',\n        wrong: 'red',\n        extra: 'darkred',\n        caret: 'cyan'\n      }\n    }\n  }\n}","import { isDoneTyping } from '../util/handlers';\nimport { IGNORED_CHARACTERS } from '../util/text';\n\nconst typing = (\n  state: Typer.State, \n  action: Typer.Actions.Typing\n) => {\n  let newState = setTyped(state, action);\n  newState = addToTimeline(newState, action);\n  return setDone(newState);\n}\n\nexport default typing;\n\nfunction setTyped(\n  state: Typer.State, \n  { char }: Typer.Actions.Typing\n) {\n  let { typed } = state;\n  // dont add spaces together\n  if (char === ' ' && typed.endsWith(' ')) return state;\n  if (char === 'Backspace')\n    typed = typed.substr(0, typed.length - 1);\n  else typed = typed + char;\n  return { ...state, typed };\n}\n\nfunction addToTimeline(\n  state: Typer.State,\n  { char, time }: Typer.Actions.Typing\n) {\n  if (!state.typed) {\n    if (IGNORED_CHARACTERS.includes(char)) return state;\n  }\n  return {\n    ...state,\n    timeline: [\n      ...state.timeline,\n      { timestamp: time, char, typed: state.typed }\n    ]\n  };\n}\n\nfunction setDone(state: Typer.State) {\n  if (isDoneTyping(state))\n    return {\n      ...state,\n      screen: 'stats'\n    }\n  return state;\n}\n","export default function screen(\n  state: Typer.State, \n  action: Typer.Actions.Screen\n): Typer.State {\n  return {\n    ...state,\n    screen: action.screen\n  }\n}","import React from 'react';\nimport { getWidth } from '../util/text';\nimport { useTyper } from \"./Typer\";\n\ninterface Props {\n  position: [number, number];\n  focused: boolean;\n}\n\nfunction Caret({ position, focused }: Props) {\n  const { config, typed } = useTyper();\n  const [className, setClassName] = React.useState('caret');\n\n  React.useEffect(() => {\n    setClassName('caret');\n    const timeoutId = setTimeout(() => {\n      setClassName('caret animated');\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [typed]);\n\n  if (!position) return null;\n  const [x, y] = position;\n  const charWidth = getWidth('a', config);\n  const clampedY = y ? 1 : 0;\n  return (\n    <span \n      className={className}\n      style={{ \n        position: 'absolute', \n        top: 0, \n        left: 0, \n        transform: `translate(${x * charWidth + 3}px, ${clampedY * config.lineHeight + 5}px)`,\n        color: config.colors.caret,\n        visibility: focused ? 'visible' : 'hidden'\n      }}\n    >|\n    </span>\n  );\n} \n\nexport default Caret;","import React from 'react';\nimport { useTyper } from \"./Typer\";\n\ninterface Props {\n  text?: string;\n  typed?: string;\n}\n\nconst Char = React.memo(function Char({ text, typed }: Props) {\n  const { config } = useTyper();\n  const code = React.useMemo(() => {\n    if (!typed) return 'left';\n    if (!text) return 'extra';\n    if (typed === text) return 'correct';\n    return 'wrong';\n  }, [text, typed]);\n  const color = config.colors[code]\n  const str = text || typed;\n  const className = ['Char', code].join(' ')\n  return (\n    <span className={className} style={{color}}>{str}</span>\n  );\n});\n\nexport default Char;","import React from \"react\";\nimport zip from 'lodash/zip';\nimport Char from \"./Char\";\nimport { useTyper } from \"./Typer\";\nimport { getChars, getWidth } from \"../util/text\";\nimport '../styles/Word.css';\n\ninterface Props {\n  text: string;\n  typed?: string;\n  current: boolean;\n}\n\nconst Word = React.memo(function Word({ text, typed, current }: Props) {\n  const { config } = useTyper();\n  const _chars = zip(\n    getChars(text),\n    getChars(typed),\n  );\n  const redline = !current && typed && text !== typed;\n  const className = [\n    \"Word\", \n    redline && 'redline',\n    current && 'current'\n  ].filter(c => c).join(' ');\n  const space = getWidth(' ', config);\n  return (\n    <div \n      className={className} \n      style={{\n        marginRight: space, \n        borderBottomColor: redline ? config.colors.wrong : 'transparent'\n      }}\n    >\n      {_chars.map(([text, typed], index) => \n        <Char \n          key={index}\n          text={text}\n          typed={typed}\n        />\n      )}\n    </div>\n  );\n});\n\nexport default Word;","import React from 'react';\nimport zip from 'lodash/zip';\nimport { getWords } from '../util/text';\nimport Word from './Word';\nimport '../styles/Line.css';\n\ninterface Props {\n  text: string;\n  typed: string;\n}\n\nconst Line = React.memo(function Line({ text, typed }: Props) {\n  const typedWords = getWords(typed);\n  const words = zip(\n    getWords(text),\n    typedWords,\n    [undefined, ...typedWords],\n    typedWords.slice(1)\n  )\n\n  function isCurrent(word?: string, prev?: string, next?: string) {\n    if (!typed && !prev) return true;\n    if (typed.endsWith(' ')) return prev != null && word == null;\n    return word != null && next == null;\n  }\n\n  return (\n    <div className=\"Line\">\n      {words.map(([text, typedWord, prevTyped, nextTyped], index) => \n        text && <Word\n          key={index}\n          text={text} \n          typed={typedWord}\n          current={isCurrent(typedWord, prevTyped, nextTyped)} \n        />\n      )}\n    </div>\n  );\n});\n\nexport default Line;","import React from 'react';\nimport { getCaretPosition, getLines, getWidth, IGNORED_MODIFIERS } from '../util/text'\nimport { useTyper, useTyperDispatch } from './Typer'\nimport Caret from './Caret';\nimport '../styles/TypingTest.css';\nimport Line from './Line';\n\ninterface Props {\n  onKeyPress(\n    e: React.KeyboardEvent<HTMLInputElement>,\n    direction: 'up' | 'down'\n  ): boolean;\n}\n\nfunction TypingTest({ onKeyPress }: Props) {\n  const { content, typed, config } = useTyper();\n  const dispatch = useTyperDispatch();\n\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [inputHasFocus, setInputFocus] = React.useState(false);\n  const [capslock, setCapslock] = React.useState(false);\n\n  React.useEffect(() => {\n    inputRef.current?.focus();\n  }, [content.text]);\n\n  const lines = React.useMemo(() => {\n   return getLines(content.text, typed, config); \n  }, [typed, content, config]);\n\n  const caret = React.useMemo(() => {\n    return getCaretPosition(lines.map(([t]) => t), typed);\n  }, [lines, typed]);\n\n  function keyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    capslockDetector(e);\n    if (onKeyPress(e, 'down')) return;\n    const char = e.key;\n    const ignore = IGNORED_MODIFIERS.some(mod => {\n      return e.getModifierState(mod);\n    })\n    if (ignore) return;\n    if (char.length === 1 || char === 'Backspace') {\n      dispatch({ type: 'typing', char, time: Date.now() });\n      e.preventDefault();\n      return;\n    }\n  }\n\n  function keyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n    onKeyPress(e, 'up');\n    capslockDetector(e);\n  }\n\n  function capslockDetector(e: React.KeyboardEvent<HTMLInputElement>) {\n    setCapslock(e.getModifierState('CapsLock'));\n  }\n\n  const drawingLines = React.useMemo(() => {\n    if (caret[1] < 2) return lines.slice(0, 3);\n    return lines.slice(caret[1] - 1, caret[1] + 2);\n  }, [lines, caret]);\n\n  const threeLinesHeight = config.lineHeight * 3 + 10 // 10px padding\n\n  return (\n    <div className=\"TypingTest\" style={{\n      fontFamily: config.fontFamily,\n      fontSize: config.fontSize + 'px',\n      lineHeight: (config.lineHeight - 1) + 'px', // 1px border bottom\n    }}>\n      <input \n        ref={inputRef}\n        onKeyDown={keyDown}\n        onKeyUp={keyUp}\n        style={{height: 0, padding: 0, border: 0, position: \"absolute\"}}\n        onFocus={() => setInputFocus(true)}\n        onBlur={() => setInputFocus(false)}\n      />\n      <p style={{visibility: capslock ? \"visible\" : \"hidden\"}}>\n        CAPSLOCK IS ACTIVE\n      </p>\n      <div className=\"threeLines\" style={{\n        height: threeLinesHeight + 'px',\n        width: config.width * getWidth('a', config)\n      }}>\n        <div \n          className=\"words\" \n          onClick={() => inputRef.current?.focus()}\n          style={{ transform: `translateY(0px)`}}\n        >\n          {drawingLines.map(([text, typed]) => \n            text && <Line\n              key={text}\n              text={text} \n              typed={typed}\n            />\n          )}\n          <Caret position={caret} focused={inputHasFocus} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TypingTest;\n","import React from 'react';\nimport reducer from '../reducers';\nimport Screens from './Screens';\n\nexport * from '../util/handlers';\n\nconst StateContext = \n  React.createContext<Typer.State>(init({ text: '' })!);\nconst DispatchContext = \n  React.createContext<React.Dispatch<Typer.Actions.Any> | null>(null);\n\ninterface Props {\n  typed?: string;\n  content: Typer.Content;\n  restartOnContentChange?: boolean\n  onType?(state: Typer.State): void;\n  onKeyPress?(e: React.KeyboardEvent<HTMLInputElement>, direction: 'up' | 'down'): boolean\n}\n\nexport function Typer({ \n  typed, \n  content, \n  onType,\n  onKeyPress = () => false,\n  restartOnContentChange = true \n}: Props) {\n  const [state, dispatch] = React.useReducer(reducer, null, () => init(content));\n\n  React.useEffect(() => {\n    dispatch({ type: 'init', content, reset: restartOnContentChange });\n  }, [content, restartOnContentChange]);\n\n  React.useEffect(() => {\n    if (!typed) return;\n    dispatch({ type: 'merge', state: { typed }});\n  }, [typed])\n\n  const prevTyped = React.useRef<string | null>(null);\n  React.useEffect(() => {\n    if (!onType || prevTyped.current === state!.typed) return;\n    if (prevTyped.current !== null) onType(state!);\n    prevTyped.current = state!.typed;\n  }, [state, onType]);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state!}>\n        <Screens onKeyPress={onKeyPress}/>\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n}\n\nexport function useTyper() {\n  return React.useContext(StateContext);\n}\n\nexport function useTyperDispatch() {\n  return React.useContext(DispatchContext)!;\n}\n\nfunction init(content: Typer.Content) {\n  return reducer(null, { type: 'init', content, reset: true });\n}","import React from 'react';\nimport last from 'lodash/last';\nimport zip from 'lodash/zip';\nimport { ComposedChart, Line, Scatter, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { netWpm, rawWpm, mistypedLast, timeSlice } from '../util/handlers';\nimport { getChars, getWords } from '../util/text';\nimport { useTyper } from './Typer';\nimport '../styles/Stats.css';\n\nfunction Stats() {\n  const state = useTyper();\n  const { content, typed, config } = state;\n\n  const counts = charCounts(content.text, typed);\n  const startTime = state.timeline[0].timestamp;\n  const duration = (last(state.timeline)!.timestamp - startTime) / 1000;\n\n  const chartData = React.useMemo(() => {\n    debugger;\n    const data = Array\n      .from({ length: Math.round(duration)  })\n      .map((_, index) => {\n        return { \n          second: index + 1, \n          wpm: wpmPoint(state, index),\n          raw: slicePoint(state, index), \n          errors: errorPoint(state, index),\n          typed: typedPoint(state, index)\n        };\n      });\n    last(data)!.second = duration;\n    return data;\n  }, [state, duration]);\n\n  const acc = React.useMemo(() => {\n    const total = getWords(content.text).join('').length;\n    const errors = chartData.reduce((sum, d) => (\n      d.errors ? sum + d.errors : sum\n    ), 0)\n    return (1 - errors / total) * 100;\n  }, [chartData, content]);\n\n  return (\n    <div className=\"Stats\">\n      <div className=\"wpm\">\n        <h3>wpm</h3>\n        <h2>{Math.round(netWpm(state))}</h2>\n      </div>\n      <div className=\"acc\">\n        <h3>acc</h3>\n        <h2>{Math.round(acc)}%</h2>\n      </div>\n      <div className=\"chart\">\n        <ComposedChart width={config.width * 15} height={300} data={chartData}>\n          <Line type=\"monotone\" yAxisId=\"wpm\" dataKey=\"raw\" stroke=\"darkred\" fill=\"darkred\"/>\n          <Line type=\"monotone\" yAxisId=\"wpm\" dataKey=\"wpm\" stroke=\"red\" fill=\"red\"/>\n          <Scatter type=\"monotone\" yAxisId=\"errors\" dataKey=\"errors\" stroke=\"black\" fill=\"gray\"/>\n          <CartesianGrid stroke=\"#fff3\" strokeDasharray=\"5 5\" />\n          <XAxis \n            type=\"number\" \n            dataKey=\"second\" \n            tickCount={10}\n            domain={[1, 'dataMax']}\n            allowDecimals={false}\n          />\n          <YAxis yAxisId=\"wpm\"/>\n          <YAxis yAxisId=\"errors\" orientation=\"right\" allowDecimals={false}/>\n          <Tooltip/>\n        </ComposedChart>\n      </div>\n      <div className=\"raw\">\n        <h3>raw</h3>\n        <h2>{Math.round(rawWpm(state))}</h2>\n      </div>\n      <div className=\"chars\">\n        <h3>characters</h3>\n        <h2>{counts.correct}/{counts.incorrect}/{counts.extra}/{counts.missing}</h2>\n      </div>\n      <div className=\"time\">\n        <h3>time</h3>\n        <h2>{Math.round(duration)}s</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default Stats;\n\nfunction charCounts(text: string, typed: string) {\n  let correct = 0, incorrect = 0, missing = 0, extras = 0\n  zip(\n    getWords(text),\n    getWords(typed)\n  ).forEach(([wtext, wtyped]) => {\n    zip(\n      getChars(wtext),\n      getChars(wtyped)\n    ).forEach(([chtext, chtyped]) => {\n      if (!chtext) extras++;\n      if (!chtyped) missing++;\n      else if (chtext === chtyped) correct++;\n      else incorrect++;\n    });\n    correct++; // spaces\n  });\n  correct--; // does not end with space\n  return {correct, incorrect, missing, extra: extras }\n}\n\nfunction slicePoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime + (second - 1) * 1000,\n    startTime + (second + 2) * 1000,\n    true\n  );\n  if (slice.length === 0) return 0;\n  const typed = last(slice)!.typed;\n  const st = { typed, content: state.content, timeline: slice };\n  return Math.round(rawWpm(st));\n}\n\nfunction wpmPoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime,\n    startTime + (second + 1) * 1000,\n    true\n  );\n  if (slice.length === 0) return 0;\n  const typed = last(slice)!.typed;\n  const st = { typed, content: state.content, timeline: slice };\n  return Math.round(netWpm(st));\n}\n\nfunction errorPoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime + second * 1000,\n    startTime + (second + 1) * 1000,\n    false\n  );\n  if (slice.length === 0) return null;\n  return slice.reduce((errs, item) => {\n    return errs + Number(mistypedLast({\n      typed: item.typed,\n      content: state.content\n    }));\n  }, 0) || null;\n}\n\nfunction typedPoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime,\n    startTime + (second + 1) * 1000,\n    false\n  );\n  if (slice.length === 0) return '';\n  return last(slice)!.typed;\n}","import React from 'react';\nimport TypingTest from './TypingTest';\nimport Stats from './Stats';\nimport { useTyper } from './Typer';\n\ninterface Props {\n  onKeyPress(e: React.KeyboardEvent<HTMLInputElement>, direction: 'up' | 'down'): boolean;\n}\n\nfunction Screens({ onKeyPress }: Props) {\n  const { screen } = useTyper();\n\n  return screen === 'stats' \n        ? <Stats />\n        : <TypingTest onKeyPress={onKeyPress} />;\n}\n\nexport default Screens;","import React from 'react';\nimport { Typer } from '../../components/Typer';\n\nconst QUOTES_URL = process.env.REACT_APP_QUOTES_URL!;\n\nfunction Quotes() {\n  const [quotes, setQuotes] = React.useState<Typer.Content[]>([]);\n  const [index, setIndex] = React.useState(-1);\n\n  React.useEffect(() => {\n    fetch(QUOTES_URL)\n      .then(r => r.json())\n      .then(({ quotes }) => {\n        setQuotes(quotes);\n        setIndex(rand(quotes.length));\n      });\n  }, [])\n\n  const onType = React.useCallback(t => {\n    // console.log(t);\n  }, []);\n\n  if (index === -1) return <div>Loading...</div>;\n\n  return (\n    <>\n      <Typer content={quotes[index]} onType={onType}/>\n      <button onClick={() => setIndex(rand(quotes.length))}>Next</button>\n    </>\n  );\n}\n\nexport default Quotes;\n\n\nfunction rand(count: number) {\n  return Math.floor(Math.random() * count);\n}","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { Typer, lastWpm, isDoneTyping, netWpm } from \"../../components/Typer\";\nconst audios = [\n  undefined,\n  require('./audios/1.wav').default,\n  require('./audios/2.wav').default,\n  require('./audios/3.wav').default,\n  require('./audios/4.wav').default,\n  require('./audios/5.wav').default,\n  require('./audios/6.wav').default,\n  require('./audios/7.wav').default,\n]\n\n// const audioClamp = clamp(1, audios.length - 1);\n\nfunction Yoshi() {\n  const [content, setContent] = \n    React.useState<Typer.Content | null>(null);\n  const [track, setTrack] = React.useState(0);\n  const [timeoutId, setTimeoutId] = React.useState<NodeJS.Timeout | null>(null)\n  const refs = React.useRef<HTMLAudioElement[]>([]);\n\n  React.useLayoutEffect(() => {\n    const audioProm = Promise.all(\n      refs.current.map(el => {\n        el.load();\n        return new Promise(resolve => {\n          el.oncanplay = () => resolve(el);\n        })\n      })\n    );\n    fetch('/nancio-type/yoshi.txt').then(async r => {\n      const text = await r.text();\n      await audioProm;\n      setContent({ text });\n    });\n  }, []);\n\n  function onType(state: Typer.State) {\n    if (timeoutId) clearTimeout(timeoutId);\n    if (isDoneTyping(state)) {\n      const net = netWpm(state);\n      const index = clamp(Math.floor(net / 15), 1, audios.length - 1);\n      setTrack(index);\n      return;\n    }\n    const wpm = lastWpm(state);\n    const index = clamp(Math.floor(wpm / 15), 1, audios.length - 1);\n    setTrack(index);\n    refs.current.forEach(e => {\n      e.play();\n    });\n    const id = setTimeout(() => {\n      setTrack(0);\n      refs.current.forEach(e => {\n        e.pause();\n        e.currentTime = 0;\n      })\n    }, 1000);\n    setTimeoutId(id);\n  }\n\n  if (!content) return <div>Loading...</div>;\n  return (\n    <>\n      {audios.map((src, index) => src &&\n        <audio \n          key={index} \n          ref={r => refs.current[index - 1] = r!}\n          muted={index !== track}\n          preload=\"auto\"\n          loop \n        >\n          <source src={src} type=\"audio/wav\"/>\n        </audio>\n      ) }\n      <Typer content={content} onType={onType}/>\n    </>\n  );\n}\n\nexport default Yoshi;","const threeDecimals = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 3,\n  minimumFractionDigits: 3\n});\n\nconst threeIfNecessary = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 3\n})\n\nconst wpmf = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 0,\n  maximumSignificantDigits: 3,\n  minimumSignificantDigits: 3,\n});\n\nconst integer = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 0,\n});\n\nexport function totalBananas(num: number) {\n  const [base, exp] = sci(num);\n  if (exp < 6) return threeDecimals.format(num);\n  return threeDecimals.format(base) + 'e' + exp;\n}\n\nexport function bps(num: number) {\n  const [base, exp] = sci(num);\n  if (exp < 6) return threeIfNecessary.format(num);\n  return threeIfNecessary.format(base) + 'e' + exp;\n}\n\nexport function price(num: number) {\n  const [base, exp] = sci(num);\n  if (exp < 6) return integer.format(num);\n  return threeIfNecessary.format(base) + 'e' + exp;\n}\n\nexport function wpm(num: number) {\n  return wpmf.format(num);\n}\n\nfunction sci(num: number): [number, number] {\n  const exp = Math.floor(Math.log10(num));\n  return [num / 10 ** exp, exp];\n}","function init(\n  state: Banana.State | null, \n  action: Banana.Actions.Init\n): Banana.State {\n  if (action.load) {\n    return {\n      ...state!,\n    };\n  }\n  return {\n    bananas: 0,\n    totalBananas: 0,\n    bpsMultiplier: 1,\n    typer: {\n      bpt: 1,\n      multiplier: 1,\n      totalBananas: 0,\n      gain: 0,\n      cpsPercent: 0,\n      count: 0\n    },\n    buildings: [\n      building(0, 'typewriter', 0.1, 15), \n      building(1, 'monke', 1, 100),\n      building(2, 'bot', 8, 1_100),\n      building(3, 'server', 47, 12_000),\n      building(4, 'crtypomine', 260, 130_000),\n      building(5, 'bank', 1_400, 1.4e6),\n      building(6, 'temple', 7_800, 20e6),\n      building(7, 'spaceship', 44_000, 330e6),\n      building(8, 'portal', 260_000, 5.1e9),\n      building(9, 'time machine', 1.6e6, 75e9),\n      // building(10, 'portal', 10e6, 1e12),\n      // building(11, 'time machine', 65e6, 14e12),\n      // building(12, 'antimatter', 430e6, 170e12),\n      // building(13, 'prism', 2.9e9, 2.1e15),\n      // building(14, 'chancemaker', 21e9, 26e15),\n      // building(15, 'fractal', 150e9, 310e15),\n      // building(16, 'irl command', 1.1e12, 71e18),\n      // building(17, 'idleverse', 8.3e12, 12e21)\n    ],\n    upgrades: [\n      // typewritter\n      doubleEfficiencyUpgrade(0, 'typing lessons', 100, 0, 1),\n      doubleEfficiencyUpgrade(1, 'carpal tunneling', 500, 0, 1),\n      doubleEfficiencyUpgrade(2, 'ten fingers', 10_000, 0, 10),\n      buildingGainUpgrade(3, 'thousand fingers', 100_000, 0, 25, 'add', 0.1),\n      buildingGainUpgrade(4, 'million fingers', 10e6, 0, 50, 'multiply', 5),\n      buildingGainUpgrade(5, 'billion fingers', 100e6, 0, 100, 'multiply', 10),\n      buildingGainUpgrade(6, 'trillion fingers', 1e9, 0, 150, 'multiply', 20),\n      buildingGainUpgrade(7, 'quadrillion fingers', 10e9, 0, 200, 'multiply', 20),\n      buildingGainUpgrade(8, 'quintillion fingers', 10e12, 0, 250, 'multiply', 20),\n      // monke\n      doubleEfficiencyUpgrade(9, 'monketype.com', 1_000, 1, 1),\n      doubleEfficiencyUpgrade(10, 'monke flip', 5_000, 1, 5),\n      doubleEfficiencyUpgrade(11, 'genes enhancer', 50_000, 1, 25),\n      doubleEfficiencyUpgrade(12, 'monke planet', 5e6, 1, 50),\n      doubleEfficiencyUpgrade(13, 'king kong', 500e6, 1, 100),\n      doubleEfficiencyUpgrade(14, 'monke rap', 50e9, 1, 150),\n      doubleEfficiencyUpgrade(15, 'dk!', 50e12, 1, 200),\n      doubleEfficiencyUpgrade(16, 'donkey kong!', 50e15, 1, 250),\n      // bot\n      doubleEfficiencyUpgrade(17, 'beep', 11_000, 2, 1),\n      doubleEfficiencyUpgrade(18, 'boop', 55_000, 2, 5),\n      doubleEfficiencyUpgrade(19, 'deep learning', 550_000, 2, 25),\n      doubleEfficiencyUpgrade(20, 'ai overturn', 55e6, 2, 50),\n      doubleEfficiencyUpgrade(21, 'george', 5.5e9, 2, 100),\n      doubleEfficiencyUpgrade(22, 'deep fake', 550e9, 2, 150),\n      doubleEfficiencyUpgrade(23, 'deep typing', 550e12, 2, 200),\n      doubleEfficiencyUpgrade(24, 'i, monke', 550e15, 2, 250),\n      // server\n      doubleEfficiencyUpgrade(25, 'discord', 120_000, 3, 1),\n      doubleEfficiencyUpgrade(26, '1st boost', 600_000, 3, 5),\n      doubleEfficiencyUpgrade(27, 'challenges', 6e6, 3, 25),\n      doubleEfficiencyUpgrade(28, 'wpm roles', 600e6, 3, 50),\n      doubleEfficiencyUpgrade(29, 'streams', 60e9, 3, 100),\n      doubleEfficiencyUpgrade(30, '10k members', 6e12, 3, 150),\n      doubleEfficiencyUpgrade(31, 'boost lvl 3', 6e15, 3, 200),\n      doubleEfficiencyUpgrade(32, 'secret server', 6e18, 3, 250),\n      // crtypomine\n      doubleEfficiencyUpgrade(33, 'autocorrect', 1.3e6, 4, 1),\n      doubleEfficiencyUpgrade(34, 'typocurrency', 6.5e6, 4, 5),\n      doubleEfficiencyUpgrade(35, 'tpu farm', 65e6, 4, 25),\n      doubleEfficiencyUpgrade(36, '69 MH/s', 6.5e9, 4, 50),\n      doubleEfficiencyUpgrade(37, '420 MH/s', 650e9, 4, 100),\n      doubleEfficiencyUpgrade(38, 'tpu shortage', 65e12, 4, 150),\n      doubleEfficiencyUpgrade(39, 'wall street crash', 65e15, 4, 200),\n      doubleEfficiencyUpgrade(40, 'codvi19 vaccine', 65e18, 4, 250),\n      // bank\n      doubleEfficiencyUpgrade(41, 'taller tellers', 14e6, 5, 1),\n      doubleEfficiencyUpgrade(42, 'titanium cards', 70e6, 5, 5),\n      doubleEfficiencyUpgrade(43, 'antiacid vaults', 700e6, 5, 25),\n      doubleEfficiencyUpgrade(44, 'banana coins', 70e9, 5, 50),\n      doubleEfficiencyUpgrade(45, 'exp. interests', 7e12, 5, 100),\n      doubleEfficiencyUpgrade(46, 'financial zen', 700e12, 5, 150),\n      doubleEfficiencyUpgrade(47, 'wallet way', 700e15, 5, 200),\n      doubleEfficiencyUpgrade(48, 'rationale stuffed', 700e18, 5, 250),\n      // temple\n      doubleEfficiencyUpgrade(49, 'golden idols', 200e6, 6, 1),\n      doubleEfficiencyUpgrade(50, 'sacrifices', 1e9, 6, 5),\n      doubleEfficiencyUpgrade(51, 'blessed fingers', 10e9, 6, 25),\n      doubleEfficiencyUpgrade(52, 'monkegod festival', 1e12, 6, 50),\n      doubleEfficiencyUpgrade(53, 'enlarged pantheon', 100e12, 6, 100),\n      doubleEfficiencyUpgrade(54, 'bowser in the sky', 10e15, 6, 150),\n      doubleEfficiencyUpgrade(55, 'creation myth', 10e18, 6, 200),\n      doubleEfficiencyUpgrade(56, 'dk rap prayers', 10e21, 6, 250),\n      // spaceship\n      doubleEfficiencyUpgrade(57, 'banana nebulae', 3.3e9, 7, 1),\n      doubleEfficiencyUpgrade(58, 'wormholes', 16.5e9, 7, 5),\n      doubleEfficiencyUpgrade(59, 'frequent flyer', 165e9, 7, 25),\n      doubleEfficiencyUpgrade(60, 'warp drive', 16.5e12, 7, 50),\n      doubleEfficiencyUpgrade(61, 'banana monoliths', 1.65e15, 7, 100),\n      doubleEfficiencyUpgrade(62, 'generation ship', 165e15, 7, 150),\n      doubleEfficiencyUpgrade(63, 'dyson sphere', 165e18, 7, 200),\n      doubleEfficiencyUpgrade(64, 'final frontier', 165e21, 7, 250),\n      // portal\n      doubleEfficiencyUpgrade(65, 'ancient keyboard', 51e9, 8, 1),\n      doubleEfficiencyUpgrade(66, 'typeling workers', 255e9, 8, 5),\n      doubleEfficiencyUpgrade(67, 'soul bond', 2.55e12, 8, 25),\n      doubleEfficiencyUpgrade(68, 'sanity dance', 255e12, 8, 50),\n      doubleEfficiencyUpgrade(69, 'brane transplant', 25.5e15, 8, 100),\n      doubleEfficiencyUpgrade(70, 'deity-sized portals', 2.55e18, 8, 150),\n      doubleEfficiencyUpgrade(71, 'big crunch plan', 2.55e21, 8, 200),\n      doubleEfficiencyUpgrade(72, 'maddening chants', 2.55e24, 8, 250),\n      // time machine\n      doubleEfficiencyUpgrade(73, 'flux capacitors', 750e9, 9, 1),\n      doubleEfficiencyUpgrade(74, 'time paradox solver', 3.75e12, 9, 5),\n      doubleEfficiencyUpgrade(75, 'quantum conundrum', 37.5e12, 9, 25),\n      doubleEfficiencyUpgrade(76, 'causality enforcer', 3.75e15, 9, 50),\n      doubleEfficiencyUpgrade(77, 'yestermorrow comp', 375e15, 9, 100),\n      doubleEfficiencyUpgrade(78, 'far future enact', 37.5e18, 9, 150),\n      doubleEfficiencyUpgrade(79, 'great loop hypo', 37.5e21, 9, 200),\n      doubleEfficiencyUpgrade(80, 'second seconds', 37.5e24, 9, 250),\n      // typing\n      typingUpgrade(81, 'pbc keycaps', 50_000, 1_000),\n      typingUpgrade(82, 'metal keycaps', 5e6, 100_000),\n      typingUpgrade(83, 'titanium keycaps', 500e6, 10e6),\n      typingUpgrade(84, 'adamantium keycaps', 50e9, 1e9),\n      typingUpgrade(85, 'unobtainium keycaps', 5e12, 100e9),\n      typingUpgrade(86, 'eludium keycaps', 500e12, 10e12),\n      typingUpgrade(87, 'wishalloy keycaps', 50e15, 1e15),\n      typingUpgrade(88, 'fantasteel keycaps', 5e18, 10e18),\n      // banana splits\n      bpsMultiplierUpgrade(89, 'banana split', 1e6, 50_000, 0.01),\n      bpsMultiplierUpgrade(90, 'sugar split', 5e6, 250_000, 0.01),\n      bpsMultiplierUpgrade(91, 'oatmeal split', 10e6, 500_000, 0.01),\n      bpsMultiplierUpgrade(92, 'peanut butter split', 50e6, 2.5e6, 0.02),\n      bpsMultiplierUpgrade(93, 'coconut split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(94, 'almond split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(95, 'hazelnut split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(96, 'walnut split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(97, 'cashew split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(98, 'white chocosplit', 500e6, 25e6, 0.02),\n      bpsMultiplierUpgrade(99, 'milk chocosplit', 500e6, 25e6, 0.02),\n      bpsMultiplierUpgrade(100, 'macadamia split', 1e9, 50e6, 0.02),\n      bpsMultiplierUpgrade(101, 'choco-chips split', 5e9, 250e6, 0.02),\n      bpsMultiplierUpgrade(102, 'whitemaca split', 10e9, 500e6, 0.02),\n      bpsMultiplierUpgrade(103, 'choco split', 50e9, 2.5e9, 0.02),\n      bpsMultiplierUpgrade(104, 'dark chocosplit', 100e9, 5e9, 0.05),\n      bpsMultiplierUpgrade(105, 'light chocosplit', 100e9, 5e9, 0.05),\n      bpsMultiplierUpgrade(106, 'eclipse split', 500e9, 25e9, 0.02),\n      bpsMultiplierUpgrade(107, 'zebra split', 1e12, 50e9, 0.02),\n      bpsMultiplierUpgrade(108, 'snicker split', 5e12, 250e9, 0.02),\n      bpsMultiplierUpgrade(109, 'waffle split', 10e12, 500e9, 0.02),\n      bpsMultiplierUpgrade(110, 'macaroon split', 50e12, 2.5e12, 0.02),\n      bpsMultiplierUpgrade(111, 'empire split', 100e12, 5e12, 0.02),\n      bpsMultiplierUpgrade(112, 'madeleine split', 500e12, 25e12, 0.02),\n      bpsMultiplierUpgrade(113, 'palmiers split', 500e12, 25e12, 0.02),\n      bpsMultiplierUpgrade(114, 'palet split', 1e15, 50e12, 0.02),\n      bpsMultiplierUpgrade(115, 'sablé split', 1e15, 50e12, 0.02),\n    ],\n    tech: {\n      lastTimestamp: action.timestamp\n    },\n    config: {}\n  }\n}\n\nexport default init;\n\nfunction building(\n  id: number,\n  name: string,\n  baseBps: number,\n  price: number,\n): Banana.Building {\n  return {\n    id,\n    name,\n    baseBps,\n    multiplier: 1,\n    price,\n    owned: 0,\n    unlocked: false,\n    unlocksAt: price\n  };\n}\n\nfunction upgrade(\n  id: number,\n  name: string,\n  price: number,\n  lock: Banana.Locks.Any,\n  ...effects: Banana.Effects.Any[]\n): Banana.Upgrade {\n  return {\n    id,\n    name,\n    price,\n    unlocked: false,\n    bought: false,\n    lock,\n    effects\n  }\n}\n\nfunction doubleEfficiencyUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  buildingId: number,\n  needed: number,\n): Banana.Upgrade {\n  return upgrade(id, name, price, {\n    type: 'building',\n    buildingId,\n    needed\n  }, {\n    type: 'efficiency',\n    buildingId,\n    multiplier: 2\n  });\n}\n\nfunction buildingGainUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  buildingId: number,\n  needed: number,\n  gainType: 'add' | 'multiply',\n  gain: number,\n): Banana.Upgrade {\n  return upgrade(id, name, price, {\n    type: 'building',\n    buildingId,\n    needed\n  }, {\n    type: 'gain',\n    buildingId,\n    gainType,\n    gain\n  });\n}\n\nfunction typingUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  needed: number,\n): Banana.Upgrade {\n  return upgrade(id, name, price, {\n    type: 'typing',\n    needed\n  }, {\n    type: 'typing',\n    cpsPercent: 1\n  })\n}\n\nfunction bpsMultiplierUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  needed: number,\n  bonus: number\n) {\n  return upgrade(id, name, price, {\n    type: 'banana',\n    needed\n  }, {\n    type: 'bpsMultiplier',\n    bonus\n  });\n}","import sum from 'lodash/sum';\n\nexport function fullBps(state: Banana.State) {\n  const base = sum(state.buildings.map(b => \n    fullBuildingBps(state, b)\n  ));\n  return base * state.bpsMultiplier;\n}\n\nexport function fullBpt(state: Banana.State) {\n  const base = state.typer.bpt;\n  const gain = sum(state.buildings.slice(1).map(b => \n    b.owned * state.typer.gain\n  ));\n  const bps = fullBps(state) * state.typer.cpsPercent / 100;\n  return (base + gain) * state.typer.multiplier + bps;\n}\n\nexport function fullBuildingBps(\n  state: Banana.State, \n  building: Banana.Building\n) {\n  return buildingBpsPerOwned(state, building) * building.owned;\n}\n\nexport function buildingBpsPerOwned(\n  state: Banana.State, \n  building: Banana.Building\n) {\n  const noGain = building.baseBps * building.multiplier;\n  if (building.id !== 0) return noGain * state.bpsMultiplier;\n  const gain = sum(state.buildings.slice(1).map(b => \n    b.owned * state.typer.gain\n  ));\n  return (noGain + gain) * state.bpsMultiplier;\n}","function buyUpgrade(\n  state: Banana.State,\n  action: Banana.Actions.BuyUpgrade\n): Banana.State {\n  const upgrades = [...state.upgrades];\n  const upgrade = {...upgrades[action.upgradeId]};\n  if (!upgrade) return state;\n  if (!upgrade.unlocked) return state;\n  if (upgrade.bought) return state;\n  if (state.bananas < upgrade.price) return state;\n  const newState = {...state};\n  newState.bananas -= upgrade.price;\n  upgrade.bought = true;\n  upgrades[action.upgradeId] = upgrade;\n  newState.upgrades = upgrades;\n  upgrade.effects.forEach(effect => {\n    const effectFn = effects[effect.type] as EffectFn\n    effectFn(newState, effect);\n  })\n  return newState;\n}\n\nexport default buyUpgrade;\n\ntype EffectFn = (state: Banana.State, effect: Banana.Effects.Any) => void\n\nconst effects = {\n  efficiency,\n  gain,\n  typing,\n  bpsMultiplier\n}\n\nfunction efficiency(state: Banana.State, effect: Banana.Effects.Efficiency) {\n  if (effect.buildingId === 0) {\n    const typer = {...state.typer};\n    typer.multiplier *= effect.multiplier\n    state.typer = typer;\n  }\n  const buildings = [...state.buildings];\n  const building = {...buildings[effect.buildingId]};\n  building.multiplier *= effect.multiplier;\n  buildings[effect.buildingId] = building;\n  state.buildings = buildings;\n}\n\nfunction gain(state: Banana.State, effect: Banana.Effects.Gain) {\n  const typer = {...state.typer};\n  if (effect.gainType === 'add') {\n    typer.gain += effect.gain;\n  } else {\n    typer.gain *= effect.gain;\n  }\n  state.typer = typer;\n}\n\nfunction typing(state: Banana.State, effect: Banana.Effects.Typing) {\n  const typer = {...state.typer};\n  typer.cpsPercent += effect.cpsPercent;\n  state.typer = typer;\n}\n\nfunction bpsMultiplier(\n  state: Banana.State, \n  effect: Banana.Effects.BpsMultiplier\n) {\n  state.bpsMultiplier += effect.bonus;\n}","import React from 'react';\nimport init from './init';\nimport tick from './tick';\nimport typed from './typed';\nimport buyBuilding from './buyBuilding';\nimport buyUpgrade from './buyUpgrade';\n\ntype Reducer = (state: Banana.State, action: Banana.Actions.Any) => Banana.State\n\nconst ducers = { init, tick, typed, buyBuilding, buyUpgrade };\n\nfunction reducer(state: Banana.State, action: Banana.Actions.Any) {\n  const r = ducers[action.type] as Reducer;\n  if (!r) return state;\n  return r(state, action);\n}\n\nfunction useBanana(initialState: Banana.State | null = null) {\n  return React.useReducer(reducer, null, () => \n    init(initialState, { type: 'init', timestamp: Date.now(), load: initialState != null })\n  )\n}\n\nexport default useBanana;","import { fullBps } from \"../util/logic\";\n\nfunction tick(\n  state: Banana.State,\n  action: Banana.Actions.Tick\n): Banana.State {\n  const dt = action.timestamp - state.tech.lastTimestamp;\n  const made = fullBps(state) * dt / 1000;\n  const bananas = state.bananas + made;\n  const newState = {\n    ...state,\n    bananas,\n    totalBananas: state.totalBananas + made,\n    tech: {\n      ...state.tech,\n      lastTimestamp: action.timestamp\n    }\n  };\n  unlockBuildings(state);\n  unlockUpgrades(state);\n  return newState;\n}\n\nexport default tick;\n\nfunction unlockBuildings(state: Banana.State) {\n  const buildings = state.buildings.map(building => {\n    if ( building.unlocked \n      || building.unlocksAt > state.totalBananas\n    ) {\n      return building;\n    }\n    return { ...building, unlocked: true };\n  });\n  state.buildings = buildings;\n}\n\nfunction unlockUpgrades(state: Banana.State) {\n  state.upgrades = state.upgrades.map(upgrade => {\n    if ( upgrade.unlocked \n      || upgrade.lock.type !== 'banana'\n      || upgrade.lock.needed > state.totalBananas\n    ) {\n      return upgrade;\n    }\n    return {...upgrade, unlocked: true};\n  });\n}\n","import { fullBpt } from \"../util/logic\";\n\nfunction typed(\n  state: Banana.State,\n  action: Banana.Actions.Typed\n): Banana.State {\n  let { bananas } = state;\n  if (action.char === 'ignored') return state;\n  const multiplier = action.char === 'correct' ? 1 : 0.5;\n  const made = fullBpt(state) * multiplier;\n  bananas += made;\n  \n  const newState = {\n    ...state,\n    bananas,\n    totalBananas: state.totalBananas + made,\n    typer: {\n      ...state.typer,\n      count: state.typer.count + 1,\n      totalBananas: state.typer.totalBananas + made\n    }\n  }\n  typingUnlock(newState);\n  return newState;\n}\n\nexport default typed;\n\nfunction typingUnlock(state: Banana.State) {\n  state.upgrades = state.upgrades.map(upgrade => {\n    if ( upgrade.unlocked \n      || upgrade.lock.type !== 'typing'\n      || upgrade.lock.needed > state.typer.totalBananas\n    ) {\n      return upgrade;\n    }\n    return {...upgrade, unlocked: true};\n  });\n}","function buyBuilding(\n  state: Banana.State,\n  action: Banana.Actions.BuyBuilding\n): Banana.State {\n  const buildings = [...state.buildings];\n  const building = { ...buildings[action.buildingId] };\n  if (!building) return state;\n  if (state.bananas < building.price) return state;\n  const newState = { ...state };\n  newState.bananas -= building.price;\n  building.owned++;\n  building.price *= 1.15;\n  buildings[action.buildingId] = building;\n  newState.buildings = buildings;\n  buildingUnlock(newState, building);\n  return newState;\n}\n\nexport default buyBuilding;\n\nfunction buildingUnlock(\n  state: Banana.State, \n  building: Banana.Building\n) {\n  state.upgrades.forEach(upgrade => {\n    if ( upgrade.unlocked \n      || upgrade.lock.type !== 'building' \n      || upgrade.lock.buildingId !== building.id\n      || upgrade.lock.needed > building.owned\n    ) {\n      return;\n    }\n    // did unlock\n    const up = {...upgrade, unlocked: true};\n    state.upgrades = [...state.upgrades];\n    state.upgrades[up.id] = up;\n  });\n}","import * as formatters from '../util/formatters';\nimport '../styles/Building.css';\nimport { buildingBpsPerOwned } from '../util/logic';\n\nconst KEYBINDS = [\n  'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',\n];\n\ninterface Props {\n  state: Banana.State;\n  building: Banana.Building;\n  ctrlHeld: boolean;\n  onBuy(id: number): void;\n}\n\nfunction Building({ state, building, ctrlHeld, onBuy }: Props) {\n  const keybind = KEYBINDS[building.id];\n  if (ctrlHeld) {\n    return (\n      <button\n        className=\"Building key quick-shop\"\n        disabled={state.bananas < building.price} \n        onClick={() => onBuy(building.id)}\n      >\n        <h2>{keybind}</h2>\n        <h4>{building.owned} {building.name}</h4>\n        <p>b-{formatters.price(building.price)}</p>\n        <p>bps+{formatters.bps(buildingBpsPerOwned(state, building))}</p>\n      </button>\n    );\n  }\n  return (\n    <button\n        className=\"Building key quick-shop\"\n        disabled={state.bananas < building.price} \n        onClick={() => onBuy(building.id)}\n      >\n        <h2>{keybind}</h2>\n        <h4>{building.owned}</h4>\n      </button>\n  );\n}\n\nBuilding.KEYBINDS = KEYBINDS;\n\nexport default Building;","import '../styles/Tooltip.css';\n\ninterface GeneralProps {\n  state: Banana.State\n  position: [number, number]\n}\n\ninterface BuildingProps {\n  building: Banana.Building;\n}\n\ninterface UpgradeProps {\n  upgrade: Banana.Upgrade;\n}\n\ntype Props = BuildingProps | UpgradeProps;\n\nfunction Tooltip(props: Props & GeneralProps) {\n  const { state, position } = props;\n  let children: React.ReactNode;\n  if (hasBuilding(props)) {\n    // const { building } = props;\n    children = '...';\n  } else {\n    const { upgrade } = props;\n    children = upgrade.effects.map(e => {\n      const describer = effectDescribers[e.type] as Describer;\n      return describer(state, e);\n    });\n  }\n  return (\n    <div className=\"Tooltip\" style={{\n      left: position[0], \n      top: position[1] - 20\n    }}>\n      {children}\n    </div>\n  );\n}\n\nexport default Tooltip;\n\nfunction hasBuilding(props: Props): props is BuildingProps {\n  return (props as BuildingProps).building !== undefined;\n}\n\ntype Describer = (state: Banana.State, effect: Banana.Effects.Any) => string;\nconst effectDescribers = {\n  efficiency(state: Banana.State, effect: Banana.Effects.Efficiency) {\n    if (effect.buildingId === 0) {\n      return `typewriters and typer efficiency x${effect.multiplier}`\n    }\n    const building = state.buildings[effect.buildingId];\n    return `${building.name}s efficiency x${effect.multiplier}`;\n  },\n  gain(state: Banana.State, effect: Banana.Effects.Gain) {\n    const gain = effect.gainType === 'add'\n      ? `gain +${effect.gain}`\n      : `gain ${effect.gain}x more`\n    if (effect.buildingId === 0) {\n      return `typewriters and typer ${gain} from other buildings`\n    }\n    const building = state.buildings[effect.buildingId];\n    return `${building.name}s ${gain} from other buildings`;\n  },\n  typing(state: Banana.State, effect: Banana.Effects.Typing) {\n    return `typing gains ${effect.cpsPercent}% of bps`\n  },\n  bpsMultiplier(state: Banana.State, effect: Banana.Effects.BpsMultiplier) {\n    return `bps +${effect.bonus * 100}%`;\n  }\n}","import React from 'react';\nimport * as formatters from '../util/formatters';\nimport Tooltip from './Tooltip';\nimport '../styles/Upgrade.css';\n\nconst KEYBINDS = [\n  'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\n  'z', 'x', 'c', 'v', 'b', 'n', 'm',\n];\n\ninterface Props {\n  state: Banana.State;\n  upgrade: Banana.Upgrade;\n  index: number;\n  ctrlHeld: boolean;\n  onBuy(upgrade: Banana.Upgrade): void;\n}\nfunction Upgrade({ state, upgrade, index, ctrlHeld, onBuy }: Props) {\n  const [tooltip, setTooltip] = React.useState<[number, number] | null>(null);\n\n  React.useEffect(() => {\n    setTooltip(null);\n  }, [ctrlHeld]);\n\n  function hover({ clientX, clientY }: React.MouseEvent) {\n    setTooltip([clientX, clientY])\n  }\n\n  const keybind = KEYBINDS[index];\n  if (ctrlHeld) {\n    return (\n      <div\n        className=\"Upgrade\"\n        onMouseMove={hover}\n        onMouseEnter={hover}\n        onMouseLeave={() => setTooltip(null)}\n      >\n        <button \n          className=\"key quick-shop\" \n          disabled={state.bananas < upgrade.price}\n          onClick={() => onBuy(upgrade)}\n        >\n          <h2>{keybind}</h2>\n          <h4>{upgrade.name}</h4>\n          <p>b-{formatters.price(upgrade.price)}</p>\n        </button>\n        {tooltip &&\n          <Tooltip state={state} upgrade={upgrade} position={tooltip}/>\n        }\n      </div>\n    );\n  }\n  return (\n    <button\n      className=\"Upgrade key\"\n      disabled={state.bananas < upgrade.price} \n      onClick={() => onBuy(upgrade)}\n    >\n      <h2>{keybind}</h2>\n      <h4>o</h4>\n    </button>\n  );\n}\n\nUpgrade.KEYBINDS = KEYBINDS;\n\nexport default Upgrade;","import React from 'react';\nimport randomWords from 'random-words';\nimport last from 'lodash/last';\nimport sum from 'lodash/sum';\nimport { lastWpm, mistypedLast, Typer } from '../../components/Typer';\nimport { getLines, IGNORED_CHARACTERS } from '../../util/text';\nimport * as formatters from './util/formatters';\nimport useBanana from './reducer';\nimport Building from './components/Building';\nimport Upgrade from './components/Upgrade';\nimport './styles/Banana.css';\nimport { fullBps, fullBpt } from './util/logic';\n\nconst initialState = JSON.parse(localStorage.getItem('banana') || 'null');\n\nfunction Banana() {\n  const [typed, setTyped] = React.useState('');\n  const [content, setContent] = React.useState(() => getContent());\n  const [state, dispatch] = useBanana(initialState);\n  const [wps, setWps] = React.useState(0);\n  const stateRef = React.useRef<Typer.State | null>(null);\n  const [savedAt, setSavedAt] = React.useState(Date.now());\n  const [ctrlHeld, setCtrlHeld] = React.useState(false);\n\n  const availableBuildings = React.useMemo(() => {\n    return state.buildings\n      .filter(u => u.unlocked)\n  }, [state.buildings]);\n\n  const availableUpgrades = React.useMemo(() => {\n    return state.upgrades\n      .filter(u => u.unlocked && !u.bought)\n      .sort((a, b) => a.price - b.price);\n  }, [state.upgrades]);\n  const shownBps = React.useMemo(() => {\n    return fullBps(state);\n  }, [state]);\n\n  const shownBpt = React.useMemo(() => {\n    return wps * 5 * fullBpt(state);\n  }, [wps, state]);\n\n\n  React.useEffect(() => {\n    if (Date.now() - savedAt < 10_000) return;\n    const json = JSON.stringify(state);\n    localStorage.setItem('banana', json);\n    setSavedAt(Date.now());\n  }, [state, savedAt]);\n\n  React.useEffect(() => {\n    const fps = 20;\n    const intervalId = setInterval(() => {\n      dispatch({ type: 'tick', timestamp: Date.now() });\n    }, 1000 / fps);\n    return () => clearInterval(intervalId);\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (stateRef.current == null) return;\n      const lastTime = last(stateRef.current.timeline);\n      if (!lastTime) return;\n      if (Date.now() - lastTime.timestamp > 1000) {\n        return setWps(0);\n      }\n      const wpm = lastWpm(stateRef.current);\n      setWps(wpm / 60);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  React.useEffect(() => {\n    if (typed.length < 500) return;\n    console.log('remove first lines')\n    const lines = getLines(content.text, typed, stateRef.current!.config);\n    lines.splice(0, 2); // remove first 2 lines\n    setTyped(() => {\n      let t = lines.map(([_, t]) => t).join(' ').trim();\n      if (typed.endsWith(' ')) t += ' ';\n      return t;\n    });\n    setContent(() => {\n      let t = lines.map(([t]) => t).join(' ');\n      t += ' ' + randomWords({ exactly: 50, join: ' '});\n      return { text: t };\n    });\n  }, [typed, content]);\n\n  function onType(state: Typer.State) {\n    stateRef.current = state;\n    setTyped(state.typed);\n    const lastTime = last(state.timeline);\n    if (!lastTime) return;\n    const lastChar = lastTime.char;\n\n    if (IGNORED_CHARACTERS.includes(lastChar))\n      dispatch({ type: 'typed', char: 'ignored' });\n    else if (mistypedLast(state)) \n      dispatch({ type: 'typed', char: 'mistyped'});\n    else\n      dispatch({ type: 'typed', char: 'correct' });\n  }\n\n  function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>, direction: 'up' | 'down') {\n    if (!e.getModifierState('Control')) {\n      setCtrlHeld(false);\n      return false;\n    }\n    setCtrlHeld(direction === 'down' || e.key !== 'Control');\n    if (direction === 'down') return false;\n    let keyIndex = Building.KEYBINDS.indexOf(e.key);\n    if (keyIndex !== -1) {\n      const building = state.buildings[keyIndex];\n      if (!building) return true;\n      buyBuilding(building.id);\n      return true;\n    }\n    keyIndex = Upgrade.KEYBINDS.indexOf(e.key);\n    if (keyIndex !== -1) {\n      const upgrade = availableUpgrades[keyIndex];\n      if (!upgrade) return false;\n      buyUpgrade(upgrade);\n      return true;\n    }\n    return false;\n  }\n\n  function buyBuilding(id: number) {\n    dispatch({ type: 'buyBuilding', buildingId: id });\n  }\n\n  function buyUpgrade(upgrade: Banana.Upgrade) {\n    dispatch({ type: 'buyUpgrade', upgradeId: upgrade.id });\n  }\n\n  function renderBuildingsRow() {\n    return (\n      <div className=\"top-row\">\n        {availableBuildings.map(building =>\n          <Building\n            key={building.id}\n            state={state}\n            building={building}\n            onBuy={buyBuilding}\n            ctrlHeld={ctrlHeld}\n          /> \n        )}\n        {Building.KEYBINDS\n          .slice(availableBuildings.length)\n          .map(key =>\n            <button key={key} className=\"key\" disabled>\n              <h3>{key}</h3>\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n\n  function renderUpgradesRow(index: number) {\n    const order = ['home', 'bottom'];\n    const lengths = [9, 7];\n    const start = sum(lengths.slice(0, index));\n    const end = sum(lengths.slice(0, index + 1));\n    const upgrades = availableUpgrades.slice(start, end);\n    return (\n      <div className={`${order[index]}-row`}>\n        {upgrades.map((upgrade, index) =>\n          <Upgrade\n            key={upgrade.id}\n            state={state}\n            upgrade={upgrade}\n            index={start + index}\n            ctrlHeld={ctrlHeld}\n            onBuy={buyUpgrade}\n          />\n        )}\n        {Upgrade.KEYBINDS\n          .slice(start + upgrades.length, end)\n          .map(key =>\n            <button key={key} className=\"key\" disabled>\n              <h3>{key}</h3>\n            </button>\n          )\n        }\n      </div>\n    )\n  }\n\n  const kbClasses = ['keyboard', ctrlHeld && 'quick-shop']\n    .filter(c => c)\n    .join(' ');\n\n  return (\n    <div className=\"Banana\">\n      <p>bananas: {formatters.totalBananas(state.bananas)}</p>\n      <p>bps: {formatters.bps(shownBps)} + {formatters.bps(shownBpt)}({formatters.wpm(wps * 60)} wpm)</p>\n      <Typer\n        typed={typed}\n        content={content} \n        onType={onType} \n        onKeyPress={onKeyPress}\n        restartOnContentChange={false}\n      />\n      <div className={kbClasses}>\n        {renderBuildingsRow()}\n        {renderUpgradesRow(0)}\n        {renderUpgradesRow(1)}\n      </div>\n      {!ctrlHeld && availableBuildings.length > 0 && \n        <p className=\"shop-sign\">hold ctrl to access shop</p>\n      }\n    </div>\n  )\n}\n\nexport default Banana;\n\nfunction getContent() {\n  return {\n    text: randomWords({ exactly: 100, join: ' ' })\n  }\n}","import { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Quotes from './quotes/Quotes';\nimport Yoshi from './yoshi/Yoshi';\nimport Banana from './banana/Banana';\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/quotes\">\n          <Quotes/>\n        </Route>\n        <Route path=\"/yoshi\">\n          <Yoshi/>\n        </Route>\n        <Route path=\"/banana\">\n          <Banana/>\n        </Route>\n        <Redirect to=\"/quotes\"/>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default Router;","import './App.css';\nimport Router from './pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}