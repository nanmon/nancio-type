{"version":3,"sources":["../node_modules/lodash/sum.js","util/text.ts","../node_modules/random-words/index.js","../node_modules/lodash/_baseSum.js","pages/banana/util/formatters.ts","pages/banana/reducer/init.ts","pages/banana/util/logic.ts","pages/banana/reducer/tick.ts","pages/banana/reducer/typed.ts","pages/banana/reducer/buyUpgrade.ts","pages/banana/reducer/index.ts","pages/banana/reducer/buyBuilding.ts","pages/banana/components/Building.tsx","pages/banana/components/Tooltip.tsx","pages/banana/components/Upgrade.tsx","pages/banana/Banana.tsx","util/handlers.ts","reducers/merge.ts","reducers/index.ts","reducers/init.ts","reducers/typing.ts","reducers/screen.ts","components/Caret.tsx","components/Char.tsx","components/Word.tsx","components/Line.tsx","components/TypingTest.tsx","components/Stats.tsx","components/Screens.tsx","components/Typer.tsx"],"names":["baseSum","require","identity","module","exports","array","length","IGNORED_CHARACTERS","IGNORED_MODIFIERS","getWords","text","split","filter","w","getChars","getExtra","typed","substr","getWidth","fontFamily","fontSize","context","document","createElement","getContext","font","measureText","width","getLines","typedWords","words","zip","currentLength","currentLine","lines","forEach","word","wlength","push","trim","getCaretPosition","wcount","lineIndex","findIndex","line","lwords","charIndex","slice","join","endsWith","wordList","options","maxLength","wordUsed","rightSize","generateRandomWord","generateWordWithMaxLength","randInt","lessThan","Math","floor","random","exactly","min","max","wordsPerString","formatter","separator","total","results","token","relativeIndex","i","iteratee","result","index","current","undefined","threeDecimals","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","threeIfNecessary","wpmf","maximumSignificantDigits","minimumSignificantDigits","integer","totalBananas","num","sci","base","exp","format","bps","price","log10","init","state","action","load","bananas","bpsMultiplier","typer","bpt","multiplier","gain","cpsPercent","count","buildings","building","upgrades","doubleEfficiencyUpgrade","buildingGainUpgrade","typingUpgrade","bpsMultiplierUpgrade","tech","lastTimestamp","timestamp","config","id","name","baseBps","owned","unlocked","unlocksAt","upgrade","lock","effects","bought","buildingId","needed","type","gainType","bonus","fullBps","sum","map","b","buildingBpsPerOwned","fullBuildingBps","fullBpt","noGain","tick","dt","made","newState","unlockBuildings","unlockUpgrades","char","typingUnlock","buyUpgrade","upgradeId","effect","effectFn","efficiency","typing","ducers","buyBuilding","up","buildingUnlock","reducer","r","useBanana","initialState","React","useReducer","Date","now","KEYBINDS","Building","ctrlHeld","onBuy","keybind","className","disabled","onClick","formatters","Tooltip","props","children","position","hasBuilding","e","describer","effectDescribers","style","left","top","Upgrade","useState","tooltip","setTooltip","hover","clientX","clientY","useEffect","onMouseMove","onMouseEnter","onMouseLeave","JSON","parse","localStorage","getItem","Banana","setTyped","randomWords","content","setContent","dispatch","wps","setWps","stateRef","useRef","savedAt","setSavedAt","setCtrlHeld","availableBuildings","useMemo","u","availableUpgrades","sort","a","shownBps","shownBpt","renderUpgradesRow","lengths","start","end","key","json","stringify","setItem","intervalId","setInterval","clearInterval","lastTime","last","timeline","wpm","lastWpm","console","log","splice","t","kbClasses","c","Typer","onType","lastChar","includes","mistypedLast","onKeyPress","direction","getModifierState","keyIndex","indexOf","restartOnContentChange","milis","endTime","timeSlice","st","rawWpm","isDoneTyping","allWords","pop","netWpm","errors","typedWord","typedChar","unfixedErrors","typedMilis","typedCount","wordsTyped","lastWord","actualWord","from","to","overtime","merge","reset","screen","temp","prevTime","delta","lineHeight","colors","correct","wrong","extra","caret","setDone","time","addToTimeline","Object","entries","some","val","Caret","focused","useTyper","setClassName","timeoutId","setTimeout","clearTimeout","x","y","charWidth","clampedY","transform","color","visibility","Char","memo","code","str","Word","_chars","redline","space","marginRight","borderBottomColor","Line","prev","next","prevTyped","nextTyped","TypingTest","useTyperDispatch","inputRef","inputHasFocus","setInputFocus","capslock","setCapslock","focus","capslockDetector","drawingLines","threeLinesHeight","ref","onKeyDown","mod","preventDefault","onKeyUp","height","padding","border","onFocus","onBlur","Stats","counts","incorrect","missing","extras","wtext","wtyped","chtext","chtyped","charCounts","startTime","duration","chartData","data","Array","round","_","second","wpmPoint","raw","slicePoint","errorPoint","typedPoint","acc","reduce","d","ComposedChart","yAxisId","dataKey","stroke","fill","Scatter","CartesianGrid","strokeDasharray","XAxis","tickCount","domain","allowDecimals","YAxis","orientation","errs","item","Number","Screens","StateContext","createContext","DispatchContext","Provider","value","useContext"],"mappings":"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","file":"static/js/4.67a75c8a.chunk.js","sourcesContent":["var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","import zip from 'lodash/zip';\n\nexport const IGNORED_CHARACTERS = ['', 'Backspace'];\nexport const IGNORED_MODIFIERS = ['Alt', 'AltGraph', 'Control', 'Fn', 'Meta', 'OS']\n\nexport const getWords = (text = '') => {\n  return text.split(' ').filter(w => w);\n}\n\nexport const getChars = (text = '') => {\n  return text.split('');\n}\n\nexport const getExtra = (text: string, typed = '') => {\n  if (typed.length > text.length)\n    return typed.substr(text.length);\n  return '';\n}\n\nexport const withExtra = (text: string, typed: string) => {\n  const wtext = getWords(text);\n  const wtyped = getWords(typed);\n  return zip(wtext, wtyped).map(([text, typed]) => {\n    return text + getExtra(text!, typed);\n  }).join(' ');\n}\n\nexport const getWidth = (\n  text: string, \n  {fontFamily, fontSize}: {fontFamily: string, fontSize: number}\n) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context!.font = `${fontSize}px ${fontFamily}`;\n  return context!.measureText(text).width;\n}\n\nexport const getLines = (\n  text: string, \n  typed: string, \n  { width }: { width: number }\n) => {\n  const typedWords = getWords(typed)\n  const words = zip(\n    getWords(text),\n    typedWords,\n  )\n  let currentLength = 0;\n  let currentLine: [string, string] = ['', '']\n  const lines: [string, string][] = [];\n  words.forEach(([word, typed]) => {\n    if (!word) return;\n    let wlength = word.length;\n    if (typed && typed.length > word.length) wlength = typed.length;\n    if (currentLength + 1 + wlength > width) {\n      currentLength = wlength;\n      lines.push([\n        currentLine[0].trim(),\n        currentLine[1].trim()\n      ]);\n      currentLine = [word, typed || '']\n    } else {\n      currentLength += 1 + wlength;\n      currentLine[0] += ' ' + word;\n      if (typed) currentLine[1] += ' ' + typed;\n    }\n  });\n  if (currentLine.length > 0) lines.push(currentLine);\n  return lines;\n}\n\nexport const getCaretPosition = (lines: string[], typed: string): [number, number] => {\n  const words = getWords(typed);\n  let wcount = 0;\n  const lineIndex = lines.findIndex(line => {\n    const lwords = getWords(line);\n    if (wcount + lwords.length >= words.length) return true;\n    wcount += lwords.length;\n    return false;\n  });\n  const lastWords = words.slice(wcount);\n  let charIndex = lastWords.join(' ').length;\n  if (typed.endsWith(' ')) charIndex++;\n  return [charIndex, lineIndex];\n}","var wordList = [\n  // Borrowed from xkcd password generator which borrowed it from wherever\n  \"ability\",\"able\",\"aboard\",\"about\",\"above\",\"accept\",\"accident\",\"according\",\n  \"account\",\"accurate\",\"acres\",\"across\",\"act\",\"action\",\"active\",\"activity\",\n  \"actual\",\"actually\",\"add\",\"addition\",\"additional\",\"adjective\",\"adult\",\"adventure\",\n  \"advice\",\"affect\",\"afraid\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\n  \"ago\",\"agree\",\"ahead\",\"aid\",\"air\",\"airplane\",\"alike\",\"alive\",\n  \"all\",\"allow\",\"almost\",\"alone\",\"along\",\"aloud\",\"alphabet\",\"already\",\n  \"also\",\"although\",\"am\",\"among\",\"amount\",\"ancient\",\"angle\",\"angry\",\n  \"animal\",\"announced\",\"another\",\"answer\",\"ants\",\"any\",\"anybody\",\"anyone\",\n  \"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"appearance\",\"apple\",\"applied\",\n  \"appropriate\",\"are\",\"area\",\"arm\",\"army\",\"around\",\"arrange\",\"arrangement\",\n  \"arrive\",\"arrow\",\"art\",\"article\",\"as\",\"aside\",\"ask\",\"asleep\",\n  \"at\",\"ate\",\"atmosphere\",\"atom\",\"atomic\",\"attached\",\"attack\",\"attempt\",\n  \"attention\",\"audience\",\"author\",\"automobile\",\"available\",\"average\",\"avoid\",\"aware\",\n  \"away\",\"baby\",\"back\",\"bad\",\"badly\",\"bag\",\"balance\",\"ball\",\n  \"balloon\",\"band\",\"bank\",\"bar\",\"bare\",\"bark\",\"barn\",\"base\",\n  \"baseball\",\"basic\",\"basis\",\"basket\",\"bat\",\"battle\",\"be\",\"bean\",\n  \"bear\",\"beat\",\"beautiful\",\"beauty\",\"became\",\"because\",\"become\",\"becoming\",\n  \"bee\",\"been\",\"before\",\"began\",\"beginning\",\"begun\",\"behavior\",\"behind\",\n  \"being\",\"believed\",\"bell\",\"belong\",\"below\",\"belt\",\"bend\",\"beneath\",\n  \"bent\",\"beside\",\"best\",\"bet\",\"better\",\"between\",\"beyond\",\"bicycle\",\n  \"bigger\",\"biggest\",\"bill\",\"birds\",\"birth\",\"birthday\",\"bit\",\"bite\",\n  \"black\",\"blank\",\"blanket\",\"blew\",\"blind\",\"block\",\"blood\",\"blow\",\n  \"blue\",\"board\",\"boat\",\"body\",\"bone\",\"book\",\"border\",\"born\",\n  \"both\",\"bottle\",\"bottom\",\"bound\",\"bow\",\"bowl\",\"box\",\"boy\",\n  \"brain\",\"branch\",\"brass\",\"brave\",\"bread\",\"break\",\"breakfast\",\"breath\",\n  \"breathe\",\"breathing\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\n  \"broad\",\"broke\",\"broken\",\"brother\",\"brought\",\"brown\",\"brush\",\"buffalo\",\n  \"build\",\"building\",\"built\",\"buried\",\"burn\",\"burst\",\"bus\",\"bush\",\n  \"business\",\"busy\",\"but\",\"butter\",\"buy\",\"by\",\"cabin\",\"cage\",\n  \"cake\",\"call\",\"calm\",\"came\",\"camera\",\"camp\",\"can\",\"canal\",\n  \"cannot\",\"cap\",\"capital\",\"captain\",\"captured\",\"car\",\"carbon\",\"card\",\n  \"care\",\"careful\",\"carefully\",\"carried\",\"carry\",\"case\",\"cast\",\"castle\",\n  \"cat\",\"catch\",\"cattle\",\"caught\",\"cause\",\"cave\",\"cell\",\"cent\",\n  \"center\",\"central\",\"century\",\"certain\",\"certainly\",\"chain\",\"chair\",\"chamber\",\n  \"chance\",\"change\",\"changing\",\"chapter\",\"character\",\"characteristic\",\"charge\",\"chart\",\n  \"check\",\"cheese\",\"chemical\",\"chest\",\"chicken\",\"chief\",\"child\",\"children\",\n  \"choice\",\"choose\",\"chose\",\"chosen\",\"church\",\"circle\",\"circus\",\"citizen\",\n  \"city\",\"class\",\"classroom\",\"claws\",\"clay\",\"clean\",\"clear\",\"clearly\",\n  \"climate\",\"climb\",\"clock\",\"close\",\"closely\",\"closer\",\"cloth\",\"clothes\",\n  \"clothing\",\"cloud\",\"club\",\"coach\",\"coal\",\"coast\",\"coat\",\"coffee\",\n  \"cold\",\"collect\",\"college\",\"colony\",\"color\",\"column\",\"combination\",\"combine\",\n  \"come\",\"comfortable\",\"coming\",\"command\",\"common\",\"community\",\"company\",\"compare\",\n  \"compass\",\"complete\",\"completely\",\"complex\",\"composed\",\"composition\",\"compound\",\"concerned\",\n  \"condition\",\"congress\",\"connected\",\"consider\",\"consist\",\"consonant\",\"constantly\",\"construction\",\n  \"contain\",\"continent\",\"continued\",\"contrast\",\"control\",\"conversation\",\"cook\",\"cookies\",\n  \"cool\",\"copper\",\"copy\",\"corn\",\"corner\",\"correct\",\"correctly\",\"cost\",\n  \"cotton\",\"could\",\"count\",\"country\",\"couple\",\"courage\",\"course\",\"court\",\n  \"cover\",\"cow\",\"cowboy\",\"crack\",\"cream\",\"create\",\"creature\",\"crew\",\n  \"crop\",\"cross\",\"crowd\",\"cry\",\"cup\",\"curious\",\"current\",\"curve\",\n  \"customs\",\"cut\",\"cutting\",\"daily\",\"damage\",\"dance\",\"danger\",\"dangerous\",\n  \"dark\",\"darkness\",\"date\",\"daughter\",\"dawn\",\"day\",\"dead\",\"deal\",\n  \"dear\",\"death\",\"decide\",\"declared\",\"deep\",\"deeply\",\"deer\",\"definition\",\n  \"degree\",\"depend\",\"depth\",\"describe\",\"desert\",\"design\",\"desk\",\"detail\",\n  \"determine\",\"develop\",\"development\",\"diagram\",\"diameter\",\"did\",\"die\",\"differ\",\n  \"difference\",\"different\",\"difficult\",\"difficulty\",\"dig\",\"dinner\",\"direct\",\"direction\",\n  \"directly\",\"dirt\",\"dirty\",\"disappear\",\"discover\",\"discovery\",\"discuss\",\"discussion\",\n  \"disease\",\"dish\",\"distance\",\"distant\",\"divide\",\"division\",\"do\",\"doctor\",\n  \"does\",\"dog\",\"doing\",\"doll\",\"dollar\",\"done\",\"donkey\",\"door\",\n  \"dot\",\"double\",\"doubt\",\"down\",\"dozen\",\"draw\",\"drawn\",\"dream\",\n  \"dress\",\"drew\",\"dried\",\"drink\",\"drive\",\"driven\",\"driver\",\"driving\",\n  \"drop\",\"dropped\",\"drove\",\"dry\",\"duck\",\"due\",\"dug\",\"dull\",\n  \"during\",\"dust\",\"duty\",\"each\",\"eager\",\"ear\",\"earlier\",\"early\",\n  \"earn\",\"earth\",\"easier\",\"easily\",\"east\",\"easy\",\"eat\",\"eaten\",\n  \"edge\",\"education\",\"effect\",\"effort\",\"egg\",\"eight\",\"either\",\"electric\",\n  \"electricity\",\"element\",\"elephant\",\"eleven\",\"else\",\"empty\",\"end\",\"enemy\",\n  \"energy\",\"engine\",\"engineer\",\"enjoy\",\"enough\",\"enter\",\"entire\",\"entirely\",\n  \"environment\",\"equal\",\"equally\",\"equator\",\"equipment\",\"escape\",\"especially\",\"essential\",\n  \"establish\",\"even\",\"evening\",\"event\",\"eventually\",\"ever\",\"every\",\"everybody\",\n  \"everyone\",\"everything\",\"everywhere\",\"evidence\",\"exact\",\"exactly\",\"examine\",\"example\",\n  \"excellent\",\"except\",\"exchange\",\"excited\",\"excitement\",\"exciting\",\"exclaimed\",\"exercise\",\n  \"exist\",\"expect\",\"experience\",\"experiment\",\"explain\",\"explanation\",\"explore\",\"express\",\n  \"expression\",\"extra\",\"eye\",\"face\",\"facing\",\"fact\",\"factor\",\"factory\",\n  \"failed\",\"fair\",\"fairly\",\"fall\",\"fallen\",\"familiar\",\"family\",\"famous\",\n  \"far\",\"farm\",\"farmer\",\"farther\",\"fast\",\"fastened\",\"faster\",\"fat\",\n  \"father\",\"favorite\",\"fear\",\"feathers\",\"feature\",\"fed\",\"feed\",\"feel\",\n  \"feet\",\"fell\",\"fellow\",\"felt\",\"fence\",\"few\",\"fewer\",\"field\",\n  \"fierce\",\"fifteen\",\"fifth\",\"fifty\",\"fight\",\"fighting\",\"figure\",\"fill\",\n  \"film\",\"final\",\"finally\",\"find\",\"fine\",\"finest\",\"finger\",\"finish\",\n  \"fire\",\"fireplace\",\"firm\",\"first\",\"fish\",\"five\",\"fix\",\"flag\",\n  \"flame\",\"flat\",\"flew\",\"flies\",\"flight\",\"floating\",\"floor\",\"flow\",\n  \"flower\",\"fly\",\"fog\",\"folks\",\"follow\",\"food\",\"foot\",\"football\",\n  \"for\",\"force\",\"foreign\",\"forest\",\"forget\",\"forgot\",\"forgotten\",\"form\",\n  \"former\",\"fort\",\"forth\",\"forty\",\"forward\",\"fought\",\"found\",\"four\",\n  \"fourth\",\"fox\",\"frame\",\"free\",\"freedom\",\"frequently\",\"fresh\",\"friend\",\n  \"friendly\",\"frighten\",\"frog\",\"from\",\"front\",\"frozen\",\"fruit\",\"fuel\",\n  \"full\",\"fully\",\"fun\",\"function\",\"funny\",\"fur\",\"furniture\",\"further\",\n  \"future\",\"gain\",\"game\",\"garage\",\"garden\",\"gas\",\"gasoline\",\"gate\",\n  \"gather\",\"gave\",\"general\",\"generally\",\"gentle\",\"gently\",\"get\",\"getting\",\n  \"giant\",\"gift\",\"girl\",\"give\",\"given\",\"giving\",\"glad\",\"glass\",\n  \"globe\",\"go\",\"goes\",\"gold\",\"golden\",\"gone\",\"good\",\"goose\",\n  \"got\",\"government\",\"grabbed\",\"grade\",\"gradually\",\"grain\",\"grandfather\",\"grandmother\",\n  \"graph\",\"grass\",\"gravity\",\"gray\",\"great\",\"greater\",\"greatest\",\"greatly\",\n  \"green\",\"grew\",\"ground\",\"group\",\"grow\",\"grown\",\"growth\",\"guard\",\n  \"guess\",\"guide\",\"gulf\",\"gun\",\"habit\",\"had\",\"hair\",\"half\",\n  \"halfway\",\"hall\",\"hand\",\"handle\",\"handsome\",\"hang\",\"happen\",\"happened\",\n  \"happily\",\"happy\",\"harbor\",\"hard\",\"harder\",\"hardly\",\"has\",\"hat\",\n  \"have\",\"having\",\"hay\",\"he\",\"headed\",\"heading\",\"health\",\"heard\",\n  \"hearing\",\"heart\",\"heat\",\"heavy\",\"height\",\"held\",\"hello\",\"help\",\n  \"helpful\",\"her\",\"herd\",\"here\",\"herself\",\"hidden\",\"hide\",\"high\",\n  \"higher\",\"highest\",\"highway\",\"hill\",\"him\",\"himself\",\"his\",\"history\",\n  \"hit\",\"hold\",\"hole\",\"hollow\",\"home\",\"honor\",\"hope\",\"horn\",\n  \"horse\",\"hospital\",\"hot\",\"hour\",\"house\",\"how\",\"however\",\"huge\",\n  \"human\",\"hundred\",\"hung\",\"hungry\",\"hunt\",\"hunter\",\"hurried\",\"hurry\",\n  \"hurt\",\"husband\",\"ice\",\"idea\",\"identity\",\"if\",\"ill\",\"image\",\n  \"imagine\",\"immediately\",\"importance\",\"important\",\"impossible\",\"improve\",\"in\",\"inch\",\n  \"include\",\"including\",\"income\",\"increase\",\"indeed\",\"independent\",\"indicate\",\"individual\",\n  \"industrial\",\"industry\",\"influence\",\"information\",\"inside\",\"instance\",\"instant\",\"instead\",\n  \"instrument\",\"interest\",\"interior\",\"into\",\"introduced\",\"invented\",\"involved\",\"iron\",\n  \"is\",\"island\",\"it\",\"its\",\"itself\",\"jack\",\"jar\",\"jet\",\n  \"job\",\"join\",\"joined\",\"journey\",\"joy\",\"judge\",\"jump\",\"jungle\",\n  \"just\",\"keep\",\"kept\",\"key\",\"kids\",\"kill\",\"kind\",\"kitchen\",\n  \"knew\",\"knife\",\"know\",\"knowledge\",\"known\",\"label\",\"labor\",\"lack\",\n  \"lady\",\"laid\",\"lake\",\"lamp\",\"land\",\"language\",\"large\",\"larger\",\n  \"largest\",\"last\",\"late\",\"later\",\"laugh\",\"law\",\"lay\",\"layers\",\n  \"lead\",\"leader\",\"leaf\",\"learn\",\"least\",\"leather\",\"leave\",\"leaving\",\n  \"led\",\"left\",\"leg\",\"length\",\"lesson\",\"let\",\"letter\",\"level\",\n  \"library\",\"lie\",\"life\",\"lift\",\"light\",\"like\",\"likely\",\"limited\",\n  \"line\",\"lion\",\"lips\",\"liquid\",\"list\",\"listen\",\"little\",\"live\",\n  \"living\",\"load\",\"local\",\"locate\",\"location\",\"log\",\"lonely\",\"long\",\n  \"longer\",\"look\",\"loose\",\"lose\",\"loss\",\"lost\",\"lot\",\"loud\",\n  \"love\",\"lovely\",\"low\",\"lower\",\"luck\",\"lucky\",\"lunch\",\"lungs\",\n  \"lying\",\"machine\",\"machinery\",\"mad\",\"made\",\"magic\",\"magnet\",\"mail\",\n  \"main\",\"mainly\",\"major\",\"make\",\"making\",\"man\",\"managed\",\"manner\",\n  \"manufacturing\",\"many\",\"map\",\"mark\",\"market\",\"married\",\"mass\",\"massage\",\n  \"master\",\"material\",\"mathematics\",\"matter\",\"may\",\"maybe\",\"me\",\"meal\",\n  \"mean\",\"means\",\"meant\",\"measure\",\"meat\",\"medicine\",\"meet\",\"melted\",\n  \"member\",\"memory\",\"men\",\"mental\",\"merely\",\"met\",\"metal\",\"method\",\n  \"mice\",\"middle\",\"might\",\"mighty\",\"mile\",\"military\",\"milk\",\"mill\",\n  \"mind\",\"mine\",\"minerals\",\"minute\",\"mirror\",\"missing\",\"mission\",\"mistake\",\n  \"mix\",\"mixture\",\"model\",\"modern\",\"molecular\",\"moment\",\"money\",\"monkey\",\n  \"month\",\"mood\",\"moon\",\"more\",\"morning\",\"most\",\"mostly\",\"mother\",\n  \"motion\",\"motor\",\"mountain\",\"mouse\",\"mouth\",\"move\",\"movement\",\"movie\",\n  \"moving\",\"mud\",\"muscle\",\"music\",\"musical\",\"must\",\"my\",\"myself\",\n  \"mysterious\",\"nails\",\"name\",\"nation\",\"national\",\"native\",\"natural\",\"naturally\",\n  \"nature\",\"near\",\"nearby\",\"nearer\",\"nearest\",\"nearly\",\"necessary\",\"neck\",\n  \"needed\",\"needle\",\"needs\",\"negative\",\"neighbor\",\"neighborhood\",\"nervous\",\"nest\",\n  \"never\",\"new\",\"news\",\"newspaper\",\"next\",\"nice\",\"night\",\"nine\",\n  \"no\",\"nobody\",\"nodded\",\"noise\",\"none\",\"noon\",\"nor\",\"north\",\n  \"nose\",\"not\",\"note\",\"noted\",\"nothing\",\"notice\",\"noun\",\"now\",\n  \"number\",\"numeral\",\"nuts\",\"object\",\"observe\",\"obtain\",\"occasionally\",\"occur\",\n  \"ocean\",\"of\",\"off\",\"offer\",\"office\",\"officer\",\"official\",\"oil\",\n  \"old\",\"older\",\"oldest\",\"on\",\"once\",\"one\",\"only\",\"onto\",\n  \"open\",\"operation\",\"opinion\",\"opportunity\",\"opposite\",\"or\",\"orange\",\"orbit\",\n  \"order\",\"ordinary\",\"organization\",\"organized\",\"origin\",\"original\",\"other\",\"ought\",\n  \"our\",\"ourselves\",\"out\",\"outer\",\"outline\",\"outside\",\"over\",\"own\",\n  \"owner\",\"oxygen\",\"pack\",\"package\",\"page\",\"paid\",\"pain\",\"paint\",\n  \"pair\",\"palace\",\"pale\",\"pan\",\"paper\",\"paragraph\",\"parallel\",\"parent\",\n  \"park\",\"part\",\"particles\",\"particular\",\"particularly\",\"partly\",\"parts\",\"party\",\n  \"pass\",\"passage\",\"past\",\"path\",\"pattern\",\"pay\",\"peace\",\"pen\",\n  \"pencil\",\"people\",\"per\",\"percent\",\"perfect\",\"perfectly\",\"perhaps\",\"period\",\n  \"person\",\"personal\",\"pet\",\"phrase\",\"physical\",\"piano\",\"pick\",\"picture\",\n  \"pictured\",\"pie\",\"piece\",\"pig\",\"pile\",\"pilot\",\"pine\",\"pink\",\n  \"pipe\",\"pitch\",\"place\",\"plain\",\"plan\",\"plane\",\"planet\",\"planned\",\n  \"planning\",\"plant\",\"plastic\",\"plate\",\"plates\",\"play\",\"pleasant\",\"please\",\n  \"pleasure\",\"plenty\",\"plural\",\"plus\",\"pocket\",\"poem\",\"poet\",\"poetry\",\n  \"point\",\"pole\",\"police\",\"policeman\",\"political\",\"pond\",\"pony\",\"pool\",\n  \"poor\",\"popular\",\"population\",\"porch\",\"port\",\"position\",\"positive\",\"possible\",\n  \"possibly\",\"post\",\"pot\",\"potatoes\",\"pound\",\"pour\",\"powder\",\"power\",\n  \"powerful\",\"practical\",\"practice\",\"prepare\",\"present\",\"president\",\"press\",\"pressure\",\n  \"pretty\",\"prevent\",\"previous\",\"price\",\"pride\",\"primitive\",\"principal\",\"principle\",\n  \"printed\",\"private\",\"prize\",\"probably\",\"problem\",\"process\",\"produce\",\"product\",\n  \"production\",\"program\",\"progress\",\"promised\",\"proper\",\"properly\",\"property\",\"protection\",\n  \"proud\",\"prove\",\"provide\",\"public\",\"pull\",\"pupil\",\"pure\",\"purple\",\n  \"purpose\",\"push\",\"put\",\"putting\",\"quarter\",\"queen\",\"question\",\"quick\",\n  \"quickly\",\"quiet\",\"quietly\",\"quite\",\"rabbit\",\"race\",\"radio\",\"railroad\",\n  \"rain\",\"raise\",\"ran\",\"ranch\",\"range\",\"rapidly\",\"rate\",\"rather\",\n  \"raw\",\"rays\",\"reach\",\"read\",\"reader\",\"ready\",\"real\",\"realize\",\n  \"rear\",\"reason\",\"recall\",\"receive\",\"recent\",\"recently\",\"recognize\",\"record\",\n  \"red\",\"refer\",\"refused\",\"region\",\"regular\",\"related\",\"relationship\",\"religious\",\n  \"remain\",\"remarkable\",\"remember\",\"remove\",\"repeat\",\"replace\",\"replied\",\"report\",\n  \"represent\",\"require\",\"research\",\"respect\",\"rest\",\"result\",\"return\",\"review\",\n  \"rhyme\",\"rhythm\",\"rice\",\"rich\",\"ride\",\"riding\",\"right\",\"ring\",\n  \"rise\",\"rising\",\"river\",\"road\",\"roar\",\"rock\",\"rocket\",\"rocky\",\n  \"rod\",\"roll\",\"roof\",\"room\",\"root\",\"rope\",\"rose\",\"rough\",\n  \"round\",\"route\",\"row\",\"rubbed\",\"rubber\",\"rule\",\"ruler\",\"run\",\n  \"running\",\"rush\",\"sad\",\"saddle\",\"safe\",\"safety\",\"said\",\"sail\",\n  \"sale\",\"salmon\",\"salt\",\"same\",\"sand\",\"sang\",\"sat\",\"satellites\",\n  \"satisfied\",\"save\",\"saved\",\"saw\",\"say\",\"scale\",\"scared\",\"scene\",\n  \"school\",\"science\",\"scientific\",\"scientist\",\"score\",\"screen\",\"sea\",\"search\",\n  \"season\",\"seat\",\"second\",\"secret\",\"section\",\"see\",\"seed\",\"seeing\",\n  \"seems\",\"seen\",\"seldom\",\"select\",\"selection\",\"sell\",\"send\",\"sense\",\n  \"sent\",\"sentence\",\"separate\",\"series\",\"serious\",\"serve\",\"service\",\"sets\",\n  \"setting\",\"settle\",\"settlers\",\"seven\",\"several\",\"shade\",\"shadow\",\"shake\",\n  \"shaking\",\"shall\",\"shallow\",\"shape\",\"share\",\"sharp\",\"she\",\"sheep\",\n  \"sheet\",\"shelf\",\"shells\",\"shelter\",\"shine\",\"shinning\",\"ship\",\"shirt\",\n  \"shoe\",\"shoot\",\"shop\",\"shore\",\"short\",\"shorter\",\"shot\",\"should\",\n  \"shoulder\",\"shout\",\"show\",\"shown\",\"shut\",\"sick\",\"sides\",\"sight\",\n  \"sign\",\"signal\",\"silence\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\n  \"simple\",\"simplest\",\"simply\",\"since\",\"sing\",\"single\",\"sink\",\"sister\",\n  \"sit\",\"sitting\",\"situation\",\"six\",\"size\",\"skill\",\"skin\",\"sky\",\n  \"slabs\",\"slave\",\"sleep\",\"slept\",\"slide\",\"slight\",\"slightly\",\"slip\",\n  \"slipped\",\"slope\",\"slow\",\"slowly\",\"small\",\"smaller\",\"smallest\",\"smell\",\n  \"smile\",\"smoke\",\"smooth\",\"snake\",\"snow\",\"so\",\"soap\",\"social\",\n  \"society\",\"soft\",\"softly\",\"soil\",\"solar\",\"sold\",\"soldier\",\"solid\",\n  \"solution\",\"solve\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\n  \"somewhere\",\"son\",\"song\",\"soon\",\"sort\",\"sound\",\"source\",\"south\",\n  \"southern\",\"space\",\"speak\",\"special\",\"species\",\"specific\",\"speech\",\"speed\",\n  \"spell\",\"spend\",\"spent\",\"spider\",\"spin\",\"spirit\",\"spite\",\"split\",\n  \"spoken\",\"sport\",\"spread\",\"spring\",\"square\",\"stage\",\"stairs\",\"stand\",\n  \"standard\",\"star\",\"stared\",\"start\",\"state\",\"statement\",\"station\",\"stay\",\n  \"steady\",\"steam\",\"steel\",\"steep\",\"stems\",\"step\",\"stepped\",\"stick\",\n  \"stiff\",\"still\",\"stock\",\"stomach\",\"stone\",\"stood\",\"stop\",\"stopped\",\n  \"store\",\"storm\",\"story\",\"stove\",\"straight\",\"strange\",\"stranger\",\"straw\",\n  \"stream\",\"street\",\"strength\",\"stretch\",\"strike\",\"string\",\"strip\",\"strong\",\n  \"stronger\",\"struck\",\"structure\",\"struggle\",\"stuck\",\"student\",\"studied\",\"studying\",\n  \"subject\",\"substance\",\"success\",\"successful\",\"such\",\"sudden\",\"suddenly\",\"sugar\",\n  \"suggest\",\"suit\",\"sum\",\"summer\",\"sun\",\"sunlight\",\"supper\",\"supply\",\n  \"support\",\"suppose\",\"sure\",\"surface\",\"surprise\",\"surrounded\",\"swam\",\"sweet\",\n  \"swept\",\"swim\",\"swimming\",\"swing\",\"swung\",\"syllable\",\"symbol\",\"system\",\n  \"table\",\"tail\",\"take\",\"taken\",\"tales\",\"talk\",\"tall\",\"tank\",\n  \"tape\",\"task\",\"taste\",\"taught\",\"tax\",\"tea\",\"teach\",\"teacher\",\n  \"team\",\"tears\",\"teeth\",\"telephone\",\"television\",\"tell\",\"temperature\",\"ten\",\n  \"tent\",\"term\",\"terrible\",\"test\",\"than\",\"thank\",\"that\",\"thee\",\n  \"them\",\"themselves\",\"then\",\"theory\",\"there\",\"therefore\",\"these\",\"they\",\n  \"thick\",\"thin\",\"thing\",\"think\",\"third\",\"thirty\",\"this\",\"those\",\n  \"thou\",\"though\",\"thought\",\"thousand\",\"thread\",\"three\",\"threw\",\"throat\",\n  \"through\",\"throughout\",\"throw\",\"thrown\",\"thumb\",\"thus\",\"thy\",\"tide\",\n  \"tie\",\"tight\",\"tightly\",\"till\",\"time\",\"tin\",\"tiny\",\"tip\",\n  \"tired\",\"title\",\"to\",\"tobacco\",\"today\",\"together\",\"told\",\"tomorrow\",\n  \"tone\",\"tongue\",\"tonight\",\"too\",\"took\",\"tool\",\"top\",\"topic\",\n  \"torn\",\"total\",\"touch\",\"toward\",\"tower\",\"town\",\"toy\",\"trace\",\n  \"track\",\"trade\",\"traffic\",\"trail\",\"train\",\"transportation\",\"trap\",\"travel\",\n  \"treated\",\"tree\",\"triangle\",\"tribe\",\"trick\",\"tried\",\"trip\",\"troops\",\n  \"tropical\",\"trouble\",\"truck\",\"trunk\",\"truth\",\"try\",\"tube\",\"tune\",\n  \"turn\",\"twelve\",\"twenty\",\"twice\",\"two\",\"type\",\"typical\",\"uncle\",\n  \"under\",\"underline\",\"understanding\",\"unhappy\",\"union\",\"unit\",\"universe\",\"unknown\",\n  \"unless\",\"until\",\"unusual\",\"up\",\"upon\",\"upper\",\"upward\",\"us\",\n  \"use\",\"useful\",\"using\",\"usual\",\"usually\",\"valley\",\"valuable\",\"value\",\n  \"vapor\",\"variety\",\"various\",\"vast\",\"vegetable\",\"verb\",\"vertical\",\"very\",\n  \"vessels\",\"victory\",\"view\",\"village\",\"visit\",\"visitor\",\"voice\",\"volume\",\n  \"vote\",\"vowel\",\"voyage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"want\",\n  \"war\",\"warm\",\"warn\",\"was\",\"wash\",\"waste\",\"watch\",\"water\",\n  \"wave\",\"way\",\"we\",\"weak\",\"wealth\",\"wear\",\"weather\",\"week\",\n  \"weigh\",\"weight\",\"welcome\",\"well\",\"went\",\"were\",\"west\",\"western\",\n  \"wet\",\"whale\",\"what\",\"whatever\",\"wheat\",\"wheel\",\"when\",\"whenever\",\n  \"where\",\"wherever\",\"whether\",\"which\",\"while\",\"whispered\",\"whistle\",\"white\",\n  \"who\",\"whole\",\"whom\",\"whose\",\"why\",\"wide\",\"widely\",\"wife\",\n  \"wild\",\"will\",\"willing\",\"win\",\"wind\",\"window\",\"wing\",\"winter\",\n  \"wire\",\"wise\",\"wish\",\"with\",\"within\",\"without\",\"wolf\",\"women\",\n  \"won\",\"wonder\",\"wonderful\",\"wood\",\"wooden\",\"wool\",\"word\",\"wore\",\n  \"work\",\"worker\",\"world\",\"worried\",\"worry\",\"worse\",\"worth\",\"would\",\n  \"wrapped\",\"write\",\"writer\",\"writing\",\"written\",\"wrong\",\"wrote\",\"yard\",\n  \"year\",\"yellow\",\"yes\",\"yesterday\",\"yet\",\"you\",\"young\",\"younger\",\n  \"your\",\"yourself\",\"youth\",\"zero\",\"zebra\",\"zipper\",\"zoo\",\"zulu\"\n];\n\nfunction words(options) {\n\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n    while (!rightSize) {  \n      wordUsed = generateRandomWord();\n      if(wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n\n    }\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  }\n\n  // No arguments = generate one word\n  if (typeof(options) === 'undefined') {\n    return word();\n  }\n\n  // Just a number = return that many words\n  if (typeof(options) === 'number') {\n    options = { exactly: options };\n  }\n\n  // options supported: exactly, min, max, join\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  }\n  \n  // not a number = one word par string\n  if (typeof(options.wordsPerString) !== 'number') {\n    options.wordsPerString = 1;\n  }\n\n  //not a function = returns the raw word\n  if (typeof(options.formatter) !== 'function') {\n    options.formatter = (word) => word;\n  }\n\n  //not a string = separator is a space\n  if (typeof(options.separator) !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; (i < total * options.wordsPerString); i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    }\n    else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n    relativeIndex++;\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = ''; \n      relativeIndex = 0;\n    }\n   \n  }\n  if (typeof options.join === 'string') {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words;\n// Export the word list as it is often useful\nwords.wordList = wordList;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","const threeDecimals = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 3,\n  minimumFractionDigits: 3\n});\n\nconst threeIfNecessary = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 3\n})\n\nconst wpmf = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 0,\n  maximumSignificantDigits: 3,\n  minimumSignificantDigits: 3,\n});\n\nconst integer = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 0,\n});\n\nexport function totalBananas(num: number) {\n  const [base, exp] = sci(num);\n  if (exp < 6) return threeDecimals.format(num);\n  return threeDecimals.format(base) + 'e' + exp;\n}\n\nexport function bps(num: number) {\n  const [base, exp] = sci(num);\n  if (exp < 6) return threeIfNecessary.format(num);\n  return threeIfNecessary.format(base) + 'e' + exp;\n}\n\nexport function price(num: number) {\n  const [base, exp] = sci(num);\n  if (exp < 6) return integer.format(num);\n  return threeIfNecessary.format(base) + 'e' + exp;\n}\n\nexport function wpm(num: number) {\n  return wpmf.format(num);\n}\n\nfunction sci(num: number): [number, number] {\n  const exp = Math.floor(Math.log10(num));\n  return [num / 10 ** exp, exp];\n}","function init(\n  state: Banana.State | null, \n  action: Banana.Actions.Init\n): Banana.State {\n  if (action.load) {\n    return {\n      ...state!,\n    };\n  }\n  return {\n    bananas: 0,\n    totalBananas: 0,\n    bpsMultiplier: 1,\n    typer: {\n      bpt: 1,\n      multiplier: 1,\n      totalBananas: 0,\n      gain: 0,\n      cpsPercent: 0,\n      count: 0\n    },\n    buildings: [\n      building(0, 'typewriter', 0.1, 15), \n      building(1, 'monke', 1, 100),\n      building(2, 'bot', 8, 1_100),\n      building(3, 'server', 47, 12_000),\n      building(4, 'crtypomine', 260, 130_000),\n      building(5, 'bank', 1_400, 1.4e6),\n      building(6, 'temple', 7_800, 20e6),\n      building(7, 'spaceship', 44_000, 330e6),\n      building(8, 'portal', 260_000, 5.1e9),\n      building(9, 'time machine', 1.6e6, 75e9),\n      // building(10, 'portal', 10e6, 1e12),\n      // building(11, 'time machine', 65e6, 14e12),\n      // building(12, 'antimatter', 430e6, 170e12),\n      // building(13, 'prism', 2.9e9, 2.1e15),\n      // building(14, 'chancemaker', 21e9, 26e15),\n      // building(15, 'fractal', 150e9, 310e15),\n      // building(16, 'irl command', 1.1e12, 71e18),\n      // building(17, 'idleverse', 8.3e12, 12e21)\n    ],\n    upgrades: [\n      // typewritter\n      doubleEfficiencyUpgrade(0, 'typing lessons', 100, 0, 1),\n      doubleEfficiencyUpgrade(1, 'carpal tunneling', 500, 0, 1),\n      doubleEfficiencyUpgrade(2, 'ten fingers', 10_000, 0, 10),\n      buildingGainUpgrade(3, 'thousand fingers', 100_000, 0, 25, 'add', 0.1),\n      buildingGainUpgrade(4, 'million fingers', 10e6, 0, 50, 'multiply', 5),\n      buildingGainUpgrade(5, 'billion fingers', 100e6, 0, 100, 'multiply', 10),\n      buildingGainUpgrade(6, 'trillion fingers', 1e9, 0, 150, 'multiply', 20),\n      buildingGainUpgrade(7, 'quadrillion fingers', 10e9, 0, 200, 'multiply', 20),\n      buildingGainUpgrade(8, 'quintillion fingers', 10e12, 0, 250, 'multiply', 20),\n      // monke\n      doubleEfficiencyUpgrade(9, 'monketype.com', 1_000, 1, 1),\n      doubleEfficiencyUpgrade(10, 'monke flip', 5_000, 1, 5),\n      doubleEfficiencyUpgrade(11, 'genes enhancer', 50_000, 1, 25),\n      doubleEfficiencyUpgrade(12, 'monke planet', 5e6, 1, 50),\n      doubleEfficiencyUpgrade(13, 'king kong', 500e6, 1, 100),\n      doubleEfficiencyUpgrade(14, 'monke rap', 50e9, 1, 150),\n      doubleEfficiencyUpgrade(15, 'dk!', 50e12, 1, 200),\n      doubleEfficiencyUpgrade(16, 'donkey kong!', 50e15, 1, 250),\n      // bot\n      doubleEfficiencyUpgrade(17, 'beep', 11_000, 2, 1),\n      doubleEfficiencyUpgrade(18, 'boop', 55_000, 2, 5),\n      doubleEfficiencyUpgrade(19, 'deep learning', 550_000, 2, 25),\n      doubleEfficiencyUpgrade(20, 'ai overturn', 55e6, 2, 50),\n      doubleEfficiencyUpgrade(21, 'george', 5.5e9, 2, 100),\n      doubleEfficiencyUpgrade(22, 'deep fake', 550e9, 2, 150),\n      doubleEfficiencyUpgrade(23, 'deep typing', 550e12, 2, 200),\n      doubleEfficiencyUpgrade(24, 'i, monke', 550e15, 2, 250),\n      // server\n      doubleEfficiencyUpgrade(25, 'discord', 120_000, 3, 1),\n      doubleEfficiencyUpgrade(26, '1st boost', 600_000, 3, 5),\n      doubleEfficiencyUpgrade(27, 'challenges', 6e6, 3, 25),\n      doubleEfficiencyUpgrade(28, 'wpm roles', 600e6, 3, 50),\n      doubleEfficiencyUpgrade(29, 'streams', 60e9, 3, 100),\n      doubleEfficiencyUpgrade(30, '10k members', 6e12, 3, 150),\n      doubleEfficiencyUpgrade(31, 'boost lvl 3', 6e15, 3, 200),\n      doubleEfficiencyUpgrade(32, 'secret server', 6e18, 3, 250),\n      // crtypomine\n      doubleEfficiencyUpgrade(33, 'autocorrect', 1.3e6, 4, 1),\n      doubleEfficiencyUpgrade(34, 'typocurrency', 6.5e6, 4, 5),\n      doubleEfficiencyUpgrade(35, 'tpu farm', 65e6, 4, 25),\n      doubleEfficiencyUpgrade(36, '69 MH/s', 6.5e9, 4, 50),\n      doubleEfficiencyUpgrade(37, '420 MH/s', 650e9, 4, 100),\n      doubleEfficiencyUpgrade(38, 'tpu shortage', 65e12, 4, 150),\n      doubleEfficiencyUpgrade(39, 'wall street crash', 65e15, 4, 200),\n      doubleEfficiencyUpgrade(40, 'codvi19 vaccine', 65e18, 4, 250),\n      // bank\n      doubleEfficiencyUpgrade(41, 'taller tellers', 14e6, 5, 1),\n      doubleEfficiencyUpgrade(42, 'titanium cards', 70e6, 5, 5),\n      doubleEfficiencyUpgrade(43, 'antiacid vaults', 700e6, 5, 25),\n      doubleEfficiencyUpgrade(44, 'banana coins', 70e9, 5, 50),\n      doubleEfficiencyUpgrade(45, 'exp. interests', 7e12, 5, 100),\n      doubleEfficiencyUpgrade(46, 'financial zen', 700e12, 5, 150),\n      doubleEfficiencyUpgrade(47, 'wallet way', 700e15, 5, 200),\n      doubleEfficiencyUpgrade(48, 'rationale stuffed', 700e18, 5, 250),\n      // temple\n      doubleEfficiencyUpgrade(49, 'golden idols', 200e6, 6, 1),\n      doubleEfficiencyUpgrade(50, 'sacrifices', 1e9, 6, 5),\n      doubleEfficiencyUpgrade(51, 'blessed fingers', 10e9, 6, 25),\n      doubleEfficiencyUpgrade(52, 'monkegod festival', 1e12, 6, 50),\n      doubleEfficiencyUpgrade(53, 'enlarged pantheon', 100e12, 6, 100),\n      doubleEfficiencyUpgrade(54, 'bowser in the sky', 10e15, 6, 150),\n      doubleEfficiencyUpgrade(55, 'creation myth', 10e18, 6, 200),\n      doubleEfficiencyUpgrade(56, 'dk rap prayers', 10e21, 6, 250),\n      // spaceship\n      doubleEfficiencyUpgrade(57, 'banana nebulae', 3.3e9, 7, 1),\n      doubleEfficiencyUpgrade(58, 'wormholes', 16.5e9, 7, 5),\n      doubleEfficiencyUpgrade(59, 'frequent flyer', 165e9, 7, 25),\n      doubleEfficiencyUpgrade(60, 'warp drive', 16.5e12, 7, 50),\n      doubleEfficiencyUpgrade(61, 'banana monoliths', 1.65e15, 7, 100),\n      doubleEfficiencyUpgrade(62, 'generation ship', 165e15, 7, 150),\n      doubleEfficiencyUpgrade(63, 'dyson sphere', 165e18, 7, 200),\n      doubleEfficiencyUpgrade(64, 'final frontier', 165e21, 7, 250),\n      // portal\n      doubleEfficiencyUpgrade(65, 'ancient keyboard', 51e9, 8, 1),\n      doubleEfficiencyUpgrade(66, 'typeling workers', 255e9, 8, 5),\n      doubleEfficiencyUpgrade(67, 'soul bond', 2.55e12, 8, 25),\n      doubleEfficiencyUpgrade(68, 'sanity dance', 255e12, 8, 50),\n      doubleEfficiencyUpgrade(69, 'brane transplant', 25.5e15, 8, 100),\n      doubleEfficiencyUpgrade(70, 'deity-sized portals', 2.55e18, 8, 150),\n      doubleEfficiencyUpgrade(71, 'big crunch plan', 2.55e21, 8, 200),\n      doubleEfficiencyUpgrade(72, 'maddening chants', 2.55e24, 8, 250),\n      // time machine\n      doubleEfficiencyUpgrade(73, 'flux capacitors', 750e9, 9, 1),\n      doubleEfficiencyUpgrade(74, 'time paradox solver', 3.75e12, 9, 5),\n      doubleEfficiencyUpgrade(75, 'quantum conundrum', 37.5e12, 9, 25),\n      doubleEfficiencyUpgrade(76, 'causality enforcer', 3.75e15, 9, 50),\n      doubleEfficiencyUpgrade(77, 'yestermorrow comp', 375e15, 9, 100),\n      doubleEfficiencyUpgrade(78, 'far future enact', 37.5e18, 9, 150),\n      doubleEfficiencyUpgrade(79, 'great loop hypo', 37.5e21, 9, 200),\n      doubleEfficiencyUpgrade(80, 'second seconds', 37.5e24, 9, 250),\n      // typing\n      typingUpgrade(81, 'pbc keycaps', 50_000, 1_000),\n      typingUpgrade(82, 'metal keycaps', 5e6, 100_000),\n      typingUpgrade(83, 'titanium keycaps', 500e6, 10e6),\n      typingUpgrade(84, 'adamantium keycaps', 50e9, 1e9),\n      typingUpgrade(85, 'unobtainium keycaps', 5e12, 100e9),\n      typingUpgrade(86, 'eludium keycaps', 500e12, 10e12),\n      typingUpgrade(87, 'wishalloy keycaps', 50e15, 1e15),\n      typingUpgrade(88, 'fantasteel keycaps', 5e18, 10e18),\n      // banana splits\n      bpsMultiplierUpgrade(89, 'banana split', 1e6, 50_000, 0.01),\n      bpsMultiplierUpgrade(90, 'sugar split', 5e6, 250_000, 0.01),\n      bpsMultiplierUpgrade(91, 'oatmeal split', 10e6, 500_000, 0.01),\n      bpsMultiplierUpgrade(92, 'peanut butter split', 50e6, 2.5e6, 0.02),\n      bpsMultiplierUpgrade(93, 'coconut split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(94, 'almond split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(95, 'hazelnut split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(96, 'walnut split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(97, 'cashew split', 100e6, 5e6, 0.02),\n      bpsMultiplierUpgrade(98, 'white chocosplit', 500e6, 25e6, 0.02),\n      bpsMultiplierUpgrade(99, 'milk chocosplit', 500e6, 25e6, 0.02),\n      bpsMultiplierUpgrade(100, 'macadamia split', 1e9, 50e6, 0.02),\n      bpsMultiplierUpgrade(101, 'choco-chips split', 5e9, 250e6, 0.02),\n      bpsMultiplierUpgrade(102, 'whitemaca split', 10e9, 500e6, 0.02),\n      bpsMultiplierUpgrade(103, 'choco split', 50e9, 2.5e9, 0.02),\n      bpsMultiplierUpgrade(104, 'dark chocosplit', 100e9, 5e9, 0.05),\n      bpsMultiplierUpgrade(105, 'light chocosplit', 100e9, 5e9, 0.05),\n      bpsMultiplierUpgrade(106, 'eclipse split', 500e9, 25e9, 0.02),\n      bpsMultiplierUpgrade(107, 'zebra split', 1e12, 50e9, 0.02),\n      bpsMultiplierUpgrade(108, 'snicker split', 5e12, 250e9, 0.02),\n      bpsMultiplierUpgrade(109, 'waffle split', 10e12, 500e9, 0.02),\n      bpsMultiplierUpgrade(110, 'macaroon split', 50e12, 2.5e12, 0.02),\n      bpsMultiplierUpgrade(111, 'empire split', 100e12, 5e12, 0.02),\n      bpsMultiplierUpgrade(112, 'madeleine split', 500e12, 25e12, 0.02),\n      bpsMultiplierUpgrade(113, 'palmiers split', 500e12, 25e12, 0.02),\n      bpsMultiplierUpgrade(114, 'palet split', 1e15, 50e12, 0.02),\n      bpsMultiplierUpgrade(115, 'sablé split', 1e15, 50e12, 0.02),\n    ],\n    tech: {\n      lastTimestamp: action.timestamp\n    },\n    config: {}\n  }\n}\n\nexport default init;\n\nfunction building(\n  id: number,\n  name: string,\n  baseBps: number,\n  price: number,\n): Banana.Building {\n  return {\n    id,\n    name,\n    baseBps,\n    multiplier: 1,\n    price,\n    owned: 0,\n    unlocked: false,\n    unlocksAt: price\n  };\n}\n\nfunction upgrade(\n  id: number,\n  name: string,\n  price: number,\n  lock: Banana.Locks.Any,\n  ...effects: Banana.Effects.Any[]\n): Banana.Upgrade {\n  return {\n    id,\n    name,\n    price,\n    unlocked: false,\n    bought: false,\n    lock,\n    effects\n  }\n}\n\nfunction doubleEfficiencyUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  buildingId: number,\n  needed: number,\n): Banana.Upgrade {\n  return upgrade(id, name, price, {\n    type: 'building',\n    buildingId,\n    needed\n  }, {\n    type: 'efficiency',\n    buildingId,\n    multiplier: 2\n  });\n}\n\nfunction buildingGainUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  buildingId: number,\n  needed: number,\n  gainType: 'add' | 'multiply',\n  gain: number,\n): Banana.Upgrade {\n  return upgrade(id, name, price, {\n    type: 'building',\n    buildingId,\n    needed\n  }, {\n    type: 'gain',\n    buildingId,\n    gainType,\n    gain\n  });\n}\n\nfunction typingUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  needed: number,\n): Banana.Upgrade {\n  return upgrade(id, name, price, {\n    type: 'typing',\n    needed\n  }, {\n    type: 'typing',\n    cpsPercent: 1\n  })\n}\n\nfunction bpsMultiplierUpgrade(\n  id: number,\n  name: string,\n  price: number,\n  needed: number,\n  bonus: number\n) {\n  return upgrade(id, name, price, {\n    type: 'banana',\n    needed\n  }, {\n    type: 'bpsMultiplier',\n    bonus\n  });\n}","import sum from 'lodash/sum';\n\nexport function fullBps(state: Banana.State) {\n  const base = sum(state.buildings.map(b => \n    fullBuildingBps(state, b)\n  ));\n  return base * state.bpsMultiplier;\n}\n\nexport function fullBpt(state: Banana.State) {\n  const base = state.typer.bpt;\n  const gain = sum(state.buildings.slice(1).map(b => \n    b.owned * state.typer.gain\n  ));\n  const bps = fullBps(state) * state.typer.cpsPercent / 100;\n  return (base + gain) * state.typer.multiplier + bps;\n}\n\nexport function fullBuildingBps(\n  state: Banana.State, \n  building: Banana.Building\n) {\n  return buildingBpsPerOwned(state, building) * building.owned;\n}\n\nexport function buildingBpsPerOwned(\n  state: Banana.State, \n  building: Banana.Building\n) {\n  const noGain = building.baseBps * building.multiplier;\n  if (building.id !== 0) return noGain * state.bpsMultiplier;\n  const gain = sum(state.buildings.slice(1).map(b => \n    b.owned * state.typer.gain\n  ));\n  return (noGain + gain) * state.bpsMultiplier;\n}","import { fullBps } from \"../util/logic\";\n\nfunction tick(\n  state: Banana.State,\n  action: Banana.Actions.Tick\n): Banana.State {\n  const dt = action.timestamp - state.tech.lastTimestamp;\n  const made = fullBps(state) * dt / 1000;\n  const bananas = state.bananas + made;\n  const newState = {\n    ...state,\n    bananas,\n    totalBananas: state.totalBananas + made,\n    tech: {\n      ...state.tech,\n      lastTimestamp: action.timestamp\n    }\n  };\n  unlockBuildings(newState);\n  unlockUpgrades(newState);\n  return newState;\n}\n\nexport default tick;\n\nfunction unlockBuildings(state: Banana.State) {\n  const buildings = state.buildings.map(building => {\n    if ( building.unlocked \n      || building.unlocksAt > state.totalBananas\n    ) {\n      return building;\n    }\n    return { ...building, unlocked: true };\n  });\n  state.buildings = buildings;\n}\n\nfunction unlockUpgrades(state: Banana.State) {\n  state.upgrades = state.upgrades.map(upgrade => {\n    if ( upgrade.unlocked \n      || upgrade.lock.type !== 'banana'\n      || upgrade.lock.needed > state.totalBananas\n    ) {\n      return upgrade;\n    }\n    return {...upgrade, unlocked: true};\n  });\n}\n","import { fullBpt } from \"../util/logic\";\n\nfunction typed(\n  state: Banana.State,\n  action: Banana.Actions.Typed\n): Banana.State {\n  let { bananas } = state;\n  if (action.char === 'ignored') return state;\n  const multiplier = action.char === 'correct' ? 1 : 0.5;\n  const made = fullBpt(state) * multiplier;\n  bananas += made;\n  \n  const newState = {\n    ...state,\n    bananas,\n    totalBananas: state.totalBananas + made,\n    typer: {\n      ...state.typer,\n      count: state.typer.count + 1,\n      totalBananas: state.typer.totalBananas + made\n    }\n  }\n  typingUnlock(newState);\n  return newState;\n}\n\nexport default typed;\n\nfunction typingUnlock(state: Banana.State) {\n  state.upgrades = state.upgrades.map(upgrade => {\n    if ( upgrade.unlocked \n      || upgrade.lock.type !== 'typing'\n      || upgrade.lock.needed > state.typer.totalBananas\n    ) {\n      return upgrade;\n    }\n    return {...upgrade, unlocked: true};\n  });\n}","function buyUpgrade(\n  state: Banana.State,\n  action: Banana.Actions.BuyUpgrade\n): Banana.State {\n  const upgrades = [...state.upgrades];\n  const upgrade = {...upgrades[action.upgradeId]};\n  if (!upgrade) return state;\n  if (!upgrade.unlocked) return state;\n  if (upgrade.bought) return state;\n  if (state.bananas < upgrade.price) return state;\n  const newState = {...state};\n  newState.bananas -= upgrade.price;\n  upgrade.bought = true;\n  upgrades[action.upgradeId] = upgrade;\n  newState.upgrades = upgrades;\n  upgrade.effects.forEach(effect => {\n    const effectFn = effects[effect.type] as EffectFn\n    effectFn(newState, effect);\n  })\n  return newState;\n}\n\nexport default buyUpgrade;\n\ntype EffectFn = (state: Banana.State, effect: Banana.Effects.Any) => void\n\nconst effects = {\n  efficiency,\n  gain,\n  typing,\n  bpsMultiplier\n}\n\nfunction efficiency(state: Banana.State, effect: Banana.Effects.Efficiency) {\n  if (effect.buildingId === 0) {\n    const typer = {...state.typer};\n    typer.multiplier *= effect.multiplier\n    state.typer = typer;\n  }\n  const buildings = [...state.buildings];\n  const building = {...buildings[effect.buildingId]};\n  building.multiplier *= effect.multiplier;\n  buildings[effect.buildingId] = building;\n  state.buildings = buildings;\n}\n\nfunction gain(state: Banana.State, effect: Banana.Effects.Gain) {\n  const typer = {...state.typer};\n  if (effect.gainType === 'add') {\n    typer.gain += effect.gain;\n  } else {\n    typer.gain *= effect.gain;\n  }\n  state.typer = typer;\n}\n\nfunction typing(state: Banana.State, effect: Banana.Effects.Typing) {\n  const typer = {...state.typer};\n  typer.cpsPercent += effect.cpsPercent;\n  state.typer = typer;\n}\n\nfunction bpsMultiplier(\n  state: Banana.State, \n  effect: Banana.Effects.BpsMultiplier\n) {\n  state.bpsMultiplier += effect.bonus;\n}","import React from 'react';\nimport init from './init';\nimport tick from './tick';\nimport typed from './typed';\nimport buyBuilding from './buyBuilding';\nimport buyUpgrade from './buyUpgrade';\n\ntype Reducer = (state: Banana.State, action: Banana.Actions.Any) => Banana.State\n\nconst ducers = { init, tick, typed, buyBuilding, buyUpgrade };\n\nfunction reducer(state: Banana.State, action: Banana.Actions.Any) {\n  const r = ducers[action.type] as Reducer;\n  if (!r) return state;\n  return r(state, action);\n}\n\nfunction useBanana(initialState: Banana.State | null = null) {\n  return React.useReducer(reducer, null, () => \n    init(initialState, { type: 'init', timestamp: Date.now(), load: initialState != null })\n  )\n}\n\nexport default useBanana;","function buyBuilding(\n  state: Banana.State,\n  action: Banana.Actions.BuyBuilding\n): Banana.State {\n  const buildings = [...state.buildings];\n  const building = { ...buildings[action.buildingId] };\n  if (!building) return state;\n  if (state.bananas < building.price) return state;\n  const newState = { ...state };\n  newState.bananas -= building.price;\n  building.owned++;\n  building.price *= 1.15;\n  buildings[action.buildingId] = building;\n  newState.buildings = buildings;\n  buildingUnlock(newState, building);\n  return newState;\n}\n\nexport default buyBuilding;\n\nfunction buildingUnlock(\n  state: Banana.State, \n  building: Banana.Building\n) {\n  state.upgrades.forEach(upgrade => {\n    if ( upgrade.unlocked \n      || upgrade.lock.type !== 'building' \n      || upgrade.lock.buildingId !== building.id\n      || upgrade.lock.needed > building.owned\n    ) {\n      return;\n    }\n    // did unlock\n    const up = {...upgrade, unlocked: true};\n    state.upgrades = [...state.upgrades];\n    state.upgrades[up.id] = up;\n  });\n}","import * as formatters from '../util/formatters';\nimport '../styles/Building.css';\nimport { buildingBpsPerOwned } from '../util/logic';\n\nconst KEYBINDS = [\n  'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',\n];\n\ninterface Props {\n  state: Banana.State;\n  building: Banana.Building;\n  ctrlHeld: boolean;\n  onBuy(id: number): void;\n}\n\nfunction Building({ state, building, ctrlHeld, onBuy }: Props) {\n  const keybind = KEYBINDS[building.id];\n  if (ctrlHeld) {\n    return (\n      <button\n        className=\"Building key quick-shop\"\n        disabled={state.bananas < building.price} \n        onClick={() => onBuy(building.id)}\n      >\n        <h2>{keybind}</h2>\n        <h4>{building.owned} {building.name}</h4>\n        <p>b-{formatters.price(building.price)}</p>\n        <p>bps+{formatters.bps(buildingBpsPerOwned(state, building))}</p>\n      </button>\n    );\n  }\n  return (\n    <button\n        className=\"Building key quick-shop\"\n        disabled={state.bananas < building.price} \n        onClick={() => onBuy(building.id)}\n      >\n        <h2>{keybind}</h2>\n        <h4>{building.owned}</h4>\n      </button>\n  );\n}\n\nBuilding.KEYBINDS = KEYBINDS;\n\nexport default Building;","import '../styles/Tooltip.css';\n\ninterface GeneralProps {\n  state: Banana.State\n  position: [number, number]\n}\n\ninterface BuildingProps {\n  building: Banana.Building;\n}\n\ninterface UpgradeProps {\n  upgrade: Banana.Upgrade;\n}\n\ntype Props = BuildingProps | UpgradeProps;\n\nfunction Tooltip(props: Props & GeneralProps) {\n  const { state, position } = props;\n  let children: React.ReactNode;\n  if (hasBuilding(props)) {\n    // const { building } = props;\n    children = '...';\n  } else {\n    const { upgrade } = props;\n    children = upgrade.effects.map(e => {\n      const describer = effectDescribers[e.type] as Describer;\n      return describer(state, e);\n    });\n  }\n  return (\n    <div className=\"Tooltip\" style={{\n      left: position[0], \n      top: position[1] - 20\n    }}>\n      {children}\n    </div>\n  );\n}\n\nexport default Tooltip;\n\nfunction hasBuilding(props: Props): props is BuildingProps {\n  return (props as BuildingProps).building !== undefined;\n}\n\ntype Describer = (state: Banana.State, effect: Banana.Effects.Any) => string;\nconst effectDescribers = {\n  efficiency(state: Banana.State, effect: Banana.Effects.Efficiency) {\n    if (effect.buildingId === 0) {\n      return `typewriters and typer efficiency x${effect.multiplier}`\n    }\n    const building = state.buildings[effect.buildingId];\n    return `${building.name}s efficiency x${effect.multiplier}`;\n  },\n  gain(state: Banana.State, effect: Banana.Effects.Gain) {\n    const gain = effect.gainType === 'add'\n      ? `gain +${effect.gain}`\n      : `gain ${effect.gain}x more`\n    if (effect.buildingId === 0) {\n      return `typewriters and typer ${gain} from other buildings`\n    }\n    const building = state.buildings[effect.buildingId];\n    return `${building.name}s ${gain} from other buildings`;\n  },\n  typing(state: Banana.State, effect: Banana.Effects.Typing) {\n    return `typing gains ${effect.cpsPercent}% of bps`\n  },\n  bpsMultiplier(state: Banana.State, effect: Banana.Effects.BpsMultiplier) {\n    return `bps +${effect.bonus * 100}%`;\n  }\n}","import React from 'react';\nimport * as formatters from '../util/formatters';\nimport Tooltip from './Tooltip';\nimport '../styles/Upgrade.css';\n\nconst KEYBINDS = [\n  'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\n  'z', 'x', 'c', 'v', 'b', 'n', 'm',\n];\n\ninterface Props {\n  state: Banana.State;\n  upgrade: Banana.Upgrade;\n  index: number;\n  ctrlHeld: boolean;\n  onBuy(upgrade: Banana.Upgrade): void;\n}\nfunction Upgrade({ state, upgrade, index, ctrlHeld, onBuy }: Props) {\n  const [tooltip, setTooltip] = React.useState<[number, number] | null>(null);\n\n  React.useEffect(() => {\n    setTooltip(null);\n  }, [ctrlHeld]);\n\n  function hover({ clientX, clientY }: React.MouseEvent) {\n    setTooltip([clientX, clientY])\n  }\n\n  const keybind = KEYBINDS[index];\n  if (ctrlHeld) {\n    return (\n      <div\n        className=\"Upgrade\"\n        onMouseMove={hover}\n        onMouseEnter={hover}\n        onMouseLeave={() => setTooltip(null)}\n      >\n        <button \n          className=\"key quick-shop\" \n          disabled={state.bananas < upgrade.price}\n          onClick={() => onBuy(upgrade)}\n        >\n          <h2>{keybind}</h2>\n          <h4>{upgrade.name}</h4>\n          <p>b-{formatters.price(upgrade.price)}</p>\n        </button>\n        {tooltip &&\n          <Tooltip state={state} upgrade={upgrade} position={tooltip}/>\n        }\n      </div>\n    );\n  }\n  return (\n    <button\n      className=\"Upgrade key\"\n      disabled={state.bananas < upgrade.price} \n      onClick={() => onBuy(upgrade)}\n    >\n      <h2>{keybind}</h2>\n      <h4>o</h4>\n    </button>\n  );\n}\n\nUpgrade.KEYBINDS = KEYBINDS;\n\nexport default Upgrade;","import React from 'react';\nimport randomWords from 'random-words';\nimport last from 'lodash/last';\nimport sum from 'lodash/sum';\nimport { lastWpm, mistypedLast, Typer } from '../../components/Typer';\nimport { getLines, IGNORED_CHARACTERS } from '../../util/text';\nimport * as formatters from './util/formatters';\nimport useBanana from './reducer';\nimport Building from './components/Building';\nimport Upgrade from './components/Upgrade';\nimport './styles/Banana.css';\nimport { fullBps, fullBpt } from './util/logic';\n\nconst initialState = JSON.parse(localStorage.getItem('banana') || 'null');\n\nfunction Banana() {\n  const [typed, setTyped] = React.useState('');\n  const [content, setContent] = React.useState(() => getContent());\n  const [state, dispatch] = useBanana(initialState);\n  const [wps, setWps] = React.useState(0);\n  const stateRef = React.useRef<Typer.State | null>(null);\n  const [savedAt, setSavedAt] = React.useState(Date.now());\n  const [ctrlHeld, setCtrlHeld] = React.useState(false);\n\n  const availableBuildings = React.useMemo(() => {\n    return state.buildings\n      .filter(u => u.unlocked)\n  }, [state.buildings]);\n\n  const availableUpgrades = React.useMemo(() => {\n    return state.upgrades\n      .filter(u => u.unlocked && !u.bought)\n      .sort((a, b) => a.price - b.price);\n  }, [state.upgrades]);\n  const shownBps = React.useMemo(() => {\n    return fullBps(state);\n  }, [state]);\n\n  const shownBpt = React.useMemo(() => {\n    return wps * 5 * fullBpt(state);\n  }, [wps, state]);\n\n\n  React.useEffect(() => {\n    if (Date.now() - savedAt < 10_000) return;\n    const json = JSON.stringify(state);\n    localStorage.setItem('banana', json);\n    setSavedAt(Date.now());\n  }, [state, savedAt]);\n\n  React.useEffect(() => {\n    const fps = 20;\n    const intervalId = setInterval(() => {\n      dispatch({ type: 'tick', timestamp: Date.now() });\n    }, 1000 / fps);\n    return () => clearInterval(intervalId);\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (stateRef.current == null) return;\n      const lastTime = last(stateRef.current.timeline);\n      if (!lastTime) return;\n      if (Date.now() - lastTime.timestamp > 1000) {\n        return setWps(0);\n      }\n      const wpm = lastWpm(stateRef.current);\n      setWps(wpm / 60);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  React.useEffect(() => {\n    if (typed.length < 500) return;\n    console.log('remove first lines')\n    const lines = getLines(content.text, typed, stateRef.current!.config);\n    lines.splice(0, 2); // remove first 2 lines\n    setTyped(() => {\n      let t = lines.map(([_, t]) => t).join(' ').trim();\n      if (typed.endsWith(' ')) t += ' ';\n      return t;\n    });\n    setContent(() => {\n      let t = lines.map(([t]) => t).join(' ');\n      t += ' ' + randomWords({ exactly: 50, join: ' '});\n      return { text: t };\n    });\n  }, [typed, content]);\n\n  function onType(state: Typer.State) {\n    stateRef.current = state;\n    setTyped(state.typed);\n    const lastTime = last(state.timeline);\n    if (!lastTime) return;\n    const lastChar = lastTime.char;\n\n    if (IGNORED_CHARACTERS.includes(lastChar))\n      dispatch({ type: 'typed', char: 'ignored' });\n    else if (mistypedLast(state)) \n      dispatch({ type: 'typed', char: 'mistyped'});\n    else\n      dispatch({ type: 'typed', char: 'correct' });\n  }\n\n  function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>, direction: 'up' | 'down') {\n    if (!e.getModifierState('Control')) {\n      setCtrlHeld(false);\n      return false;\n    }\n    setCtrlHeld(direction === 'down' || e.key !== 'Control');\n    if (direction === 'down') return false;\n    let keyIndex = Building.KEYBINDS.indexOf(e.key);\n    if (keyIndex !== -1) {\n      const building = state.buildings[keyIndex];\n      if (!building) return true;\n      buyBuilding(building.id);\n      return true;\n    }\n    keyIndex = Upgrade.KEYBINDS.indexOf(e.key);\n    if (keyIndex !== -1) {\n      const upgrade = availableUpgrades[keyIndex];\n      if (!upgrade) return false;\n      buyUpgrade(upgrade);\n      return true;\n    }\n    return false;\n  }\n\n  function buyBuilding(id: number) {\n    dispatch({ type: 'buyBuilding', buildingId: id });\n  }\n\n  function buyUpgrade(upgrade: Banana.Upgrade) {\n    dispatch({ type: 'buyUpgrade', upgradeId: upgrade.id });\n  }\n\n  function renderBuildingsRow() {\n    return (\n      <div className=\"top-row\">\n        {availableBuildings.map(building =>\n          <Building\n            key={building.id}\n            state={state}\n            building={building}\n            onBuy={buyBuilding}\n            ctrlHeld={ctrlHeld}\n          /> \n        )}\n        {Building.KEYBINDS\n          .slice(availableBuildings.length)\n          .map(key =>\n            <button key={key} className=\"key\" disabled>\n              <h3>{key}</h3>\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n\n  function renderUpgradesRow(index: number) {\n    const order = ['home', 'bottom'];\n    const lengths = [9, 7];\n    const start = sum(lengths.slice(0, index));\n    const end = sum(lengths.slice(0, index + 1));\n    const upgrades = availableUpgrades.slice(start, end);\n    return (\n      <div className={`${order[index]}-row`}>\n        {upgrades.map((upgrade, index) =>\n          <Upgrade\n            key={upgrade.id}\n            state={state}\n            upgrade={upgrade}\n            index={start + index}\n            ctrlHeld={ctrlHeld}\n            onBuy={buyUpgrade}\n          />\n        )}\n        {Upgrade.KEYBINDS\n          .slice(start + upgrades.length, end)\n          .map(key =>\n            <button key={key} className=\"key\" disabled>\n              <h3>{key}</h3>\n            </button>\n          )\n        }\n      </div>\n    )\n  }\n\n  const kbClasses = ['keyboard', ctrlHeld && 'quick-shop']\n    .filter(c => c)\n    .join(' ');\n\n  return (\n    <div className=\"Banana\">\n      <p>bananas: {formatters.totalBananas(state.bananas)}</p>\n      <p>bps: {formatters.bps(shownBps)} + {formatters.bps(shownBpt)}({formatters.wpm(wps * 60)} wpm)</p>\n      <Typer\n        typed={typed}\n        content={content} \n        onType={onType} \n        onKeyPress={onKeyPress}\n        restartOnContentChange={false}\n      />\n      <div className={kbClasses}>\n        {renderBuildingsRow()}\n        {renderUpgradesRow(0)}\n        {renderUpgradesRow(1)}\n      </div>\n      {!ctrlHeld && availableBuildings.length > 0 && \n        <p className=\"shop-sign\">hold ctrl to access shop</p>\n      }\n    </div>\n  )\n}\n\nexport default Banana;\n\nfunction getContent() {\n  return {\n    text: randomWords({ exactly: 100, join: ' ' })\n  }\n}","import zip from 'lodash/zip';\nimport last from 'lodash/last'\nimport { getChars, getExtra, getWords, IGNORED_CHARACTERS } from \"./text\";\n\nexport function didType(state: Typer.State, str: string) {\n  const { typed, content } = state;\n  const startIndex = content.text.indexOf(str);\n  if (startIndex === -1)\n    throw Error('string not found in text');\n  const endIndex = startIndex + str.length;\n  const substr = content.text.substr(0, endIndex);\n  const subWords = getWords(substr);\n  const typedWords = getWords(typed);\n  return typedWords.length >= subWords.length;\n}\n\nexport function wordStats(state: Typer.State, wordIndex: number) {\n  const { typed, content } = state;\n  const stats = { left: 0, correct: 0, extra: 0, wrong: 0 }\n  const word = getWords(content.text)[wordIndex];\n  const typedWord = getWords(typed)[wordIndex];\n  if (!typedWord) {\n    stats.left = word.length;\n    return stats;\n  }\n  zip(\n    getChars(word),\n    getChars(typedWord),\n  ).forEach(([char, typedChar]) => {\n    if (!typedChar) stats.left++;\n    else if (char === typedChar) stats.correct++;\n    else stats.wrong++;\n  });\n  const extraStr = getExtra(word, typedWord);\n  getChars(extraStr).forEach(() => {\n    stats.extra++;\n  });\n  return stats;\n}\n\nexport function lastWpm(state: Typer.State, milis = 5000) {\n  if (state.timeline.length === 0) return 0;\n  const endTime = last(state.timeline)!.timestamp;\n  let slice = timeSlice(\n    state, \n    endTime - milis,\n    endTime + 1000,\n    false\n  );\n  if (slice.length === 0) return 0;\n  const typed = last(slice)!.typed;\n  const st = { typed, content: state.content, timeline: slice };\n  return rawWpm(st);\n}\n\nexport function isDoneTyping({ typed, content }: Typer.State) {\n  const typedWords = getWords(typed);\n  const allWords = getWords(content.text);\n  if (typedWords.length < allWords.length) return false;\n  if (typed.endsWith(' ')) return true;\n  const lastTyped = typedWords.pop();\n  const lastWord = allWords.pop();\n  return lastTyped === lastWord;\n}\n\nexport function netWpm(state: Pick<Typer.State, 'timeline' | 'content' | 'typed'>) {\n  return rawWpm(state) - unfixedErrors(state) / typedMilis(state) * 1000 * 60;\n}\n\nexport function rawWpm(state: Pick<Typer.State, 'timeline'>) {\n  return typedCount(state) / typedMilis(state) * 1000 * 60 / 5;\n}\n\nexport function typedCount(state: Pick<Typer.State, 'timeline'>) {\n  return state.timeline\n    .filter(i => !IGNORED_CHARACTERS.includes(i.char))\n    .length;\n}\n\nexport function typedMilis(state: Pick<Typer.State, 'timeline'>) {\n  if (state.timeline.length === 0) return 0;\n  return last(state.timeline)!.timestamp - state.timeline[0].timestamp;\n}\n\nexport function unfixedErrors(state: Pick<Typer.State, 'typed' | 'content'>) {\n  let errors = 0;\n  const typedWords = getWords(state.typed);\n  zip(\n    typedWords,\n    getWords(state.content.text),\n  ).forEach(([typedWord, word], index) => {\n    if (!word || !typedWord) return; // should not happen\n    if (index < typedWords.length -1 && word.length > typedWord!.length) {\n      errors++; // all missings as one error\n    }\n    zip(\n      getChars(typedWord),\n      getChars(word),\n    ).forEach(([typedChar, char]) => {\n      if (char === typedChar) return;\n      errors++; // extras and incorrects\n    });\n  });\n  return errors;\n}\n\nexport function groupTimeline(\n  state: Typer.State, \n  groupMilis: number = 1000\n): Typer.TimelineItem[][] {\n  let groups: Typer.TimelineItem[][] = [];\n  let [firstItem, ...rest] = state.timeline;\n  let prevTimestamp = firstItem.timestamp;\n  let accumTime = 0;\n  let currentGroup = [firstItem];\n  rest.forEach(item => {\n    accumTime += item.timestamp - prevTimestamp;\n    prevTimestamp = item.timestamp;\n    currentGroup.push(item);\n    while (accumTime >= groupMilis) {\n      accumTime -= groupMilis;\n      groups.push(currentGroup);\n      currentGroup = [];\n    }\n  });\n  if (currentGroup.length > 0) {\n    const groupTime = last(currentGroup)!.timestamp - currentGroup[0].timestamp;\n    if (groupTime < groupMilis / 2 && groups.length > 0) {\n      last(groups)!.push(...currentGroup);\n    } else {\n      groups.push(currentGroup);\n    }\n  }\n  return groups;\n}\n\nexport function mistypedLast(\n  state: Pick<Typer.State, 'typed' | 'content'>\n) {\n  const { typed, content } = state;\n  if (!typed) return false;\n  const char = last(typed)!;\n  if (IGNORED_CHARACTERS.includes(char)) return false;\n\n  const wordsTyped = getWords(typed);\n  const lastWord = last(wordsTyped)!;\n  const actualWord = getWords(content.text)[wordsTyped.length - 1];\n\n  // it'd be like that sometimes\n  if (!actualWord) return false;\n\n  if (typed.endsWith(' ')) {\n    // not extra, missing\n    const missing = actualWord.length - lastWord.length;\n    return missing > 0;\n  }\n\n  const lastChar = lastWord[lastWord.length - 1];\n  const actualChar = actualWord[lastWord.length - 1];\n  return actualChar !== lastChar;\n}\n\nexport function timeSlice(\n  state: Typer.State, \n  from: number, \n  to: number,\n  overtime: boolean = false\n) {\n  let start = state.timeline.findIndex(i => i.timestamp >= from);\n  let end = state.timeline.findIndex(i => i.timestamp >= to);\n  if (start === -1) start = 0;\n  if (end === -1) end = state.timeline.length - 1;\n  if (overtime) {\n    if (start > 0) start--;\n    if (end < state.timeline.length - 1) end++;\n  }\n  return state.timeline.slice(start, end);\n}","function merge(state: Typer.State, action: Typer.Actions.Merge): Typer.State {\n  let diff = Object.entries(action.state)\n    .some(([key, val]) => state[key] !== val);\n  if (!diff) return state;\n  return {\n    ...state,\n    ...action.state,\n  }\n}\n\nexport default merge;","import init from './init';\nimport typing from './typing';\nimport screen from './screen';\nimport merge from './merge';\n\nconst ducers = {\n  init,\n  typing,\n  screen,\n  merge,\n};\n\nexport default function reducer(\n  state: Typer.State | null, \n  action: Typer.Actions.Any) \n{\n  const r = ducers[action.type] as Reducer;\n  if (!r) return state;\n  return r(state, action);\n}\n\ntype Reducer = (state: Typer.State | null, action: Typer.Actions.Any) => Typer.State;","export default function init(\n  state: Typer.State | null, \n  action: Typer.Actions.Init\n): Typer.State {\n  if (!action.reset) {\n    return {\n      ...state!,\n      content: action.content,\n      timeline: []\n    }\n  }\n  return {\n    content: action.content,\n    typed: '',\n    screen: 'typing',\n    temp: {\n      prevTime: 0,\n      delta: 0,\n      errors: 0,\n      count: 0\n    },\n    timeline: [],\n    config: {\n      fontFamily: 'monospace',\n      fontSize: 24,\n      lineHeight: 30,\n      width: 60, \n      colors: {\n        left: 'gray',\n        correct: 'white',\n        wrong: 'red',\n        extra: 'darkred',\n        caret: 'cyan'\n      }\n    }\n  }\n}","import { isDoneTyping } from '../util/handlers';\nimport { IGNORED_CHARACTERS } from '../util/text';\n\nconst typing = (\n  state: Typer.State, \n  action: Typer.Actions.Typing\n) => {\n  let newState = setTyped(state, action);\n  newState = addToTimeline(newState, action);\n  return setDone(newState);\n}\n\nexport default typing;\n\nfunction setTyped(\n  state: Typer.State, \n  { char }: Typer.Actions.Typing\n) {\n  let { typed } = state;\n  // dont add spaces together\n  if (char === ' ' && typed.endsWith(' ')) return state;\n  if (char === 'Backspace')\n    typed = typed.substr(0, typed.length - 1);\n  else typed = typed + char;\n  return { ...state, typed };\n}\n\nfunction addToTimeline(\n  state: Typer.State,\n  { char, time }: Typer.Actions.Typing\n) {\n  if (!state.typed) {\n    if (IGNORED_CHARACTERS.includes(char)) return state;\n  }\n  return {\n    ...state,\n    timeline: [\n      ...state.timeline,\n      { timestamp: time, char, typed: state.typed }\n    ]\n  };\n}\n\nfunction setDone(state: Typer.State) {\n  if (isDoneTyping(state))\n    return {\n      ...state,\n      screen: 'stats'\n    }\n  return state;\n}\n","export default function screen(\n  state: Typer.State, \n  action: Typer.Actions.Screen\n): Typer.State {\n  return {\n    ...state,\n    screen: action.screen\n  }\n}","import React from 'react';\nimport { getWidth } from '../util/text';\nimport { useTyper } from \"./Typer\";\n\ninterface Props {\n  position: [number, number];\n  focused: boolean;\n}\n\nfunction Caret({ position, focused }: Props) {\n  const { config, typed } = useTyper();\n  const [className, setClassName] = React.useState('caret');\n\n  React.useEffect(() => {\n    setClassName('caret');\n    const timeoutId = setTimeout(() => {\n      setClassName('caret animated');\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [typed]);\n\n  if (!position) return null;\n  const [x, y] = position;\n  const charWidth = getWidth('a', config);\n  const clampedY = y ? 1 : 0;\n  return (\n    <span \n      className={className}\n      style={{ \n        position: 'absolute', \n        top: 0, \n        left: 0, \n        transform: `translate(${x * charWidth + 3}px, ${clampedY * config.lineHeight + 5}px)`,\n        color: config.colors.caret,\n        visibility: focused ? 'visible' : 'hidden'\n      }}\n    >|\n    </span>\n  );\n} \n\nexport default Caret;","import React from 'react';\nimport { useTyper } from \"./Typer\";\n\ninterface Props {\n  text?: string;\n  typed?: string;\n}\n\nconst Char = React.memo(function Char({ text, typed }: Props) {\n  const { config } = useTyper();\n  const code = React.useMemo(() => {\n    if (!typed) return 'left';\n    if (!text) return 'extra';\n    if (typed === text) return 'correct';\n    return 'wrong';\n  }, [text, typed]);\n  const color = config.colors[code]\n  const str = text || typed;\n  const className = ['Char', code].join(' ')\n  return (\n    <span className={className} style={{color}}>{str}</span>\n  );\n});\n\nexport default Char;","import React from \"react\";\nimport zip from 'lodash/zip';\nimport Char from \"./Char\";\nimport { useTyper } from \"./Typer\";\nimport { getChars, getWidth } from \"../util/text\";\nimport '../styles/Word.css';\n\ninterface Props {\n  text: string;\n  typed?: string;\n  current: boolean;\n}\n\nconst Word = React.memo(function Word({ text, typed, current }: Props) {\n  const { config } = useTyper();\n  const _chars = zip(\n    getChars(text),\n    getChars(typed),\n  );\n  const redline = !current && typed && text !== typed;\n  const className = [\n    \"Word\", \n    redline && 'redline',\n    current && 'current'\n  ].filter(c => c).join(' ');\n  const space = getWidth(' ', config);\n  return (\n    <div \n      className={className} \n      style={{\n        marginRight: space, \n        borderBottomColor: redline ? config.colors.wrong : 'transparent'\n      }}\n    >\n      {_chars.map(([text, typed], index) => \n        <Char \n          key={index}\n          text={text}\n          typed={typed}\n        />\n      )}\n    </div>\n  );\n});\n\nexport default Word;","import React from 'react';\nimport zip from 'lodash/zip';\nimport { getWords } from '../util/text';\nimport Word from './Word';\nimport '../styles/Line.css';\n\ninterface Props {\n  text: string;\n  typed: string;\n}\n\nconst Line = React.memo(function Line({ text, typed }: Props) {\n  const typedWords = getWords(typed);\n  const words = zip(\n    getWords(text),\n    typedWords,\n    [undefined, ...typedWords],\n    typedWords.slice(1)\n  )\n\n  function isCurrent(word?: string, prev?: string, next?: string) {\n    if (!typed && !prev) return true;\n    if (typed.endsWith(' ')) return prev != null && word == null;\n    return word != null && next == null;\n  }\n\n  return (\n    <div className=\"Line\">\n      {words.map(([text, typedWord, prevTyped, nextTyped], index) => \n        text && <Word\n          key={index}\n          text={text} \n          typed={typedWord}\n          current={isCurrent(typedWord, prevTyped, nextTyped)} \n        />\n      )}\n    </div>\n  );\n});\n\nexport default Line;","import React from 'react';\nimport { getCaretPosition, getLines, getWidth, IGNORED_MODIFIERS } from '../util/text'\nimport { useTyper, useTyperDispatch } from './Typer'\nimport Caret from './Caret';\nimport '../styles/TypingTest.css';\nimport Line from './Line';\n\ninterface Props {\n  onKeyPress(\n    e: React.KeyboardEvent<HTMLInputElement>,\n    direction: 'up' | 'down'\n  ): boolean;\n}\n\nfunction TypingTest({ onKeyPress }: Props) {\n  const { content, typed, config } = useTyper();\n  const dispatch = useTyperDispatch();\n\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [inputHasFocus, setInputFocus] = React.useState(false);\n  const [capslock, setCapslock] = React.useState(false);\n\n  React.useEffect(() => {\n    inputRef.current?.focus();\n  }, [content.text]);\n\n  const lines = React.useMemo(() => {\n   return getLines(content.text, typed, config); \n  }, [typed, content, config]);\n\n  const caret = React.useMemo(() => {\n    return getCaretPosition(lines.map(([t]) => t), typed);\n  }, [lines, typed]);\n\n  function keyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    capslockDetector(e);\n    if (onKeyPress(e, 'down')) return;\n    const char = e.key;\n    const ignore = IGNORED_MODIFIERS.some(mod => {\n      return e.getModifierState(mod);\n    })\n    if (ignore) return;\n    if (char.length === 1 || char === 'Backspace') {\n      dispatch({ type: 'typing', char, time: Date.now() });\n      e.preventDefault();\n      return;\n    }\n  }\n\n  function keyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n    onKeyPress(e, 'up');\n    capslockDetector(e);\n  }\n\n  function capslockDetector(e: React.KeyboardEvent<HTMLInputElement>) {\n    setCapslock(e.getModifierState('CapsLock'));\n  }\n\n  const drawingLines = React.useMemo(() => {\n    if (caret[1] < 2) return lines.slice(0, 3);\n    return lines.slice(caret[1] - 1, caret[1] + 2);\n  }, [lines, caret]);\n\n  const threeLinesHeight = config.lineHeight * 3 + 10 // 10px padding\n\n  return (\n    <div className=\"TypingTest\" style={{\n      fontFamily: config.fontFamily,\n      fontSize: config.fontSize + 'px',\n      lineHeight: (config.lineHeight - 1) + 'px', // 1px border bottom\n    }}>\n      <input \n        ref={inputRef}\n        onKeyDown={keyDown}\n        onKeyUp={keyUp}\n        style={{height: 0, padding: 0, border: 0, position: \"absolute\"}}\n        onFocus={() => setInputFocus(true)}\n        onBlur={() => setInputFocus(false)}\n      />\n      <p style={{visibility: capslock ? \"visible\" : \"hidden\"}}>\n        CAPSLOCK IS ACTIVE\n      </p>\n      <div className=\"threeLines\" style={{\n        height: threeLinesHeight + 'px',\n        width: config.width * getWidth('a', config)\n      }}>\n        <div \n          className=\"words\" \n          onClick={() => inputRef.current?.focus()}\n          style={{ transform: `translateY(0px)`}}\n        >\n          {drawingLines.map(([text, typed]) => \n            text && <Line\n              key={text}\n              text={text} \n              typed={typed}\n            />\n          )}\n          <Caret position={caret} focused={inputHasFocus} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TypingTest;\n","import React from 'react';\nimport last from 'lodash/last';\nimport zip from 'lodash/zip';\nimport { ComposedChart, Line, Scatter, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { netWpm, rawWpm, mistypedLast, timeSlice } from '../util/handlers';\nimport { getChars, getWords } from '../util/text';\nimport { useTyper } from './Typer';\nimport '../styles/Stats.css';\n\nfunction Stats() {\n  const state = useTyper();\n  const { content, typed, config } = state;\n\n  const counts = charCounts(content.text, typed);\n  const startTime = state.timeline[0].timestamp;\n  const duration = (last(state.timeline)!.timestamp - startTime) / 1000;\n\n  const chartData = React.useMemo(() => {\n    debugger;\n    const data = Array\n      .from({ length: Math.round(duration)  })\n      .map((_, index) => {\n        return { \n          second: index + 1, \n          wpm: wpmPoint(state, index),\n          raw: slicePoint(state, index), \n          errors: errorPoint(state, index),\n          typed: typedPoint(state, index)\n        };\n      });\n    last(data)!.second = duration;\n    return data;\n  }, [state, duration]);\n\n  const acc = React.useMemo(() => {\n    const total = getWords(content.text).join('').length;\n    const errors = chartData.reduce((sum, d) => (\n      d.errors ? sum + d.errors : sum\n    ), 0)\n    return (1 - errors / total) * 100;\n  }, [chartData, content]);\n\n  return (\n    <div className=\"Stats\">\n      <div className=\"wpm\">\n        <h3>wpm</h3>\n        <h2>{Math.round(netWpm(state))}</h2>\n      </div>\n      <div className=\"acc\">\n        <h3>acc</h3>\n        <h2>{Math.round(acc)}%</h2>\n      </div>\n      <div className=\"chart\">\n        <ComposedChart width={config.width * 15} height={300} data={chartData}>\n          <Line type=\"monotone\" yAxisId=\"wpm\" dataKey=\"raw\" stroke=\"darkred\" fill=\"darkred\"/>\n          <Line type=\"monotone\" yAxisId=\"wpm\" dataKey=\"wpm\" stroke=\"red\" fill=\"red\"/>\n          <Scatter type=\"monotone\" yAxisId=\"errors\" dataKey=\"errors\" stroke=\"black\" fill=\"gray\"/>\n          <CartesianGrid stroke=\"#fff3\" strokeDasharray=\"5 5\" />\n          <XAxis \n            type=\"number\" \n            dataKey=\"second\" \n            tickCount={10}\n            domain={[1, 'dataMax']}\n            allowDecimals={false}\n          />\n          <YAxis yAxisId=\"wpm\"/>\n          <YAxis yAxisId=\"errors\" orientation=\"right\" allowDecimals={false}/>\n          <Tooltip/>\n        </ComposedChart>\n      </div>\n      <div className=\"raw\">\n        <h3>raw</h3>\n        <h2>{Math.round(rawWpm(state))}</h2>\n      </div>\n      <div className=\"chars\">\n        <h3>characters</h3>\n        <h2>{counts.correct}/{counts.incorrect}/{counts.extra}/{counts.missing}</h2>\n      </div>\n      <div className=\"time\">\n        <h3>time</h3>\n        <h2>{Math.round(duration)}s</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default Stats;\n\nfunction charCounts(text: string, typed: string) {\n  let correct = 0, incorrect = 0, missing = 0, extras = 0\n  zip(\n    getWords(text),\n    getWords(typed)\n  ).forEach(([wtext, wtyped]) => {\n    zip(\n      getChars(wtext),\n      getChars(wtyped)\n    ).forEach(([chtext, chtyped]) => {\n      if (!chtext) extras++;\n      if (!chtyped) missing++;\n      else if (chtext === chtyped) correct++;\n      else incorrect++;\n    });\n    correct++; // spaces\n  });\n  correct--; // does not end with space\n  return {correct, incorrect, missing, extra: extras }\n}\n\nfunction slicePoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime + (second - 1) * 1000,\n    startTime + (second + 2) * 1000,\n    true\n  );\n  if (slice.length === 0) return 0;\n  const typed = last(slice)!.typed;\n  const st = { typed, content: state.content, timeline: slice };\n  return Math.round(rawWpm(st));\n}\n\nfunction wpmPoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime,\n    startTime + (second + 1) * 1000,\n    true\n  );\n  if (slice.length === 0) return 0;\n  const typed = last(slice)!.typed;\n  const st = { typed, content: state.content, timeline: slice };\n  return Math.round(netWpm(st));\n}\n\nfunction errorPoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime + second * 1000,\n    startTime + (second + 1) * 1000,\n    false\n  );\n  if (slice.length === 0) return null;\n  return slice.reduce((errs, item) => {\n    return errs + Number(mistypedLast({\n      typed: item.typed,\n      content: state.content\n    }));\n  }, 0) || null;\n}\n\nfunction typedPoint(state: Typer.State, second: number) {\n  const startTime = state.timeline[0].timestamp;\n  let slice = timeSlice(\n    state, \n    startTime,\n    startTime + (second + 1) * 1000,\n    false\n  );\n  if (slice.length === 0) return '';\n  return last(slice)!.typed;\n}","import React from 'react';\nimport TypingTest from './TypingTest';\nimport Stats from './Stats';\nimport { useTyper } from './Typer';\n\ninterface Props {\n  onKeyPress(e: React.KeyboardEvent<HTMLInputElement>, direction: 'up' | 'down'): boolean;\n}\n\nfunction Screens({ onKeyPress }: Props) {\n  const { screen } = useTyper();\n\n  return screen === 'stats' \n        ? <Stats />\n        : <TypingTest onKeyPress={onKeyPress} />;\n}\n\nexport default Screens;","import React from 'react';\nimport reducer from '../reducers';\nimport Screens from './Screens';\n\nexport * from '../util/handlers';\n\nconst StateContext = \n  React.createContext<Typer.State>(init({ text: '' })!);\nconst DispatchContext = \n  React.createContext<React.Dispatch<Typer.Actions.Any> | null>(null);\n\ninterface Props {\n  typed?: string;\n  content: Typer.Content;\n  restartOnContentChange?: boolean\n  onType?(state: Typer.State): void;\n  onKeyPress?(e: React.KeyboardEvent<HTMLInputElement>, direction: 'up' | 'down'): boolean\n}\n\nexport function Typer({ \n  typed, \n  content, \n  onType,\n  onKeyPress = () => false,\n  restartOnContentChange = true \n}: Props) {\n  const [state, dispatch] = React.useReducer(reducer, null, () => init(content));\n\n  React.useEffect(() => {\n    dispatch({ type: 'init', content, reset: restartOnContentChange });\n  }, [content, restartOnContentChange]);\n\n  React.useEffect(() => {\n    if (!typed) return;\n    dispatch({ type: 'merge', state: { typed }});\n  }, [typed])\n\n  const prevTyped = React.useRef<string | null>(null);\n  React.useEffect(() => {\n    if (!onType || prevTyped.current === state!.typed) return;\n    if (prevTyped.current !== null) onType(state!);\n    prevTyped.current = state!.typed;\n  }, [state, onType]);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state!}>\n        <Screens onKeyPress={onKeyPress}/>\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n}\n\nexport function useTyper() {\n  return React.useContext(StateContext);\n}\n\nexport function useTyperDispatch() {\n  return React.useContext(DispatchContext)!;\n}\n\nfunction init(content: Typer.Content) {\n  return reducer(null, { type: 'init', content, reset: true });\n}"],"sourceRoot":""}